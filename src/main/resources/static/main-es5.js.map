{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///global-config.ts","webpack:///proto/generated/proto/coin_pb.js","webpack:///proto/generated/proto/monster_pb.js","webpack:///proto/generated/proto/player_pb.js","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cache/measurement.service.ts","webpack:///src/app/cache/request-cache.service.ts","webpack:///src/app/communication/Communicator.ts","webpack:///src/app/communication/Direction.ts","webpack:///src/app/communication/SocketClientState.ts","webpack:///src/app/communication/format/JsonFormatter.ts","webpack:///src/app/communication/format/ProtobufFormatter.ts","webpack:///src/app/communication/simulation/data/AdditionalObject.ts","webpack:///src/app/communication/websocket/websocket.service.ts","webpack:///src/app/downloader/download.service.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/model/MeasurementResponse.ts","webpack:///src/app/model/Player.ts","webpack:///src/app/model/Request.ts","webpack:///src/app/scenes/main-scene/main-scene.component.ts","webpack:///src/app/scenes/main-scene/main-scene.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CSV_RESPONSE_HEADERS","HTTP_URL_DOWNLOAD","HTTP_URL_MAIN","WEBSOCKET_URL_MAIN","RSOCKET_URL_MAIN","SERIALIZER_DATA","SERIALIZER_METADATA","DATA_MIME_TYPE","jspb","goog","global","Function","exportSymbol","proto","CoinProto","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","positionX","getFieldWithDefault","positionY","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setPositionX","setPositionY","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getPositionX","writeInt32","getPositionY","setProto3IntField","object","extend","MonsterProto","previousDirection","timestamp","setId","readString","setPreviousDirection","setTimestamp","getId","getPreviousDirection","length","writeString","getTimestamp","setProto3StringField","PlayerProto","nickname","score","stepDirection","version","setNickname","setScore","setStepDirection","setVersion","getNickname","getScore","getStepDirection","getVersion","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MeasurementService","measurements","Array","responseTimeInMillis","requestTimestamp","size","push","providedIn","RequestCacheService","requests","x","y","enqueue","request","front","dequeue","lastCorrectRequest","console","error","_lastCorrectRequest","_nickname","Communicator","serverUrl","playersToAdd","playerToRemove","playerToUpdate","monsterToUpdate","ifJoinGame","coinToGet","updateScore","refreshCoin","state","asObservable","_myNickname","Direction","SocketClientState","JsonFormatter","data","JSON","parse","body","ProtobufFormatter","binaryBody","playerProto","AdditionalObject","number","text","WebsocketService","measurementService","requestCache","variable","makeid","setFormatter","ATTEMPTING","stompClient","brokerURL","debug","str","log","splitLargeFrames","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","frame","subscribe","gameToAddPlayer","next","formatter","decodePlayer","parsedPlayer","Date","getTime","Number","headers","addMeasurementResponse","contentLength","myNickname","getRequest","monster","monsterParsed","decodeMonster","coinPosition","decodeCoin","currentCoinPosition","getCorrectedPosition","allCoinPosition","CONNECTED","onStompError","activate","deactivate","dataToSend","dataWithSpecificFormat","encode","publish","destination","stringify","toString","result","characters","charactersLength","i","charAt","Math","floor","random","DownloadService","cacheMeasurement","RESPONSE_FILE","downloadResponseFile","getResponseMeasurements","replacer","key","header","csv","map","row","fieldName","join","toUpperCase","unshift","csvArray","Blob","type","GameComponent","mainScene","config","AUTO","height","width","scale","mode","Scale","FIT","autoCenter","CENTER_HORIZONTALLY","scene","parent","physics","arcade","gravity","fps","target","forceSetTimeOut","phaserGame","Game","add","start","HomeComponent","router","getCurrentNavigation","extras","answer","nick","navigate","startGame","MeasurementResponse","response_time_in_millis","request_timestamp","version_response","_id","_response_time_in_millis","_request_timestamp","_version_response","_size","Player","texture","existing","collider","backgroundLayer","_score","_positionX","_positionY","_version","Physics","Arcade","Sprite","SPEED","Request","_x","_y","MainSceneComponent","websocketService","renderer","downloadService","additionalData","randomString","arrayWithAdditionalData","players","Map","monsters","rank","startSendingPlayerPosition","counterRequest","scoreRanking","myPlayerName","initializeConnection","stateSubscription","getState","ifJoinToGameSubscription","getIfJoinGame","coins","create","addPlayer","document","getElementsByTagName","item","remove","joinToGame","ERROR","cleanAndBackToHomePage","updateTop3","subscriptionUpdateTop3","checkRanking","coinToGetSubscription","getCoinToGet","coinToCollect","updateScoreSubscription","getUpdateScore","myScore","get","yourScore","setText","refreshCoinsSubscription","getRefreshCoins","coinLayer","forEach","setScale","managePlayersInGame","manageMonstersInGame","game","loop","targetFps","world","setFPS","actualFps","createAnimationsBySpriteKey","anims","frames","generateFrameNumbers","frameRate","repeat","board","tilemap","pacmanObjects","addTilesetImage","coin","pathLayer","createDynamicLayer","_backgroundLayer","getObjectLayer","exitButton","image","canvas","setInteractive","on","switchScene","downloadButton","downloadResponseMeasurements","setCollisionBetween","cursorKeys","input","keyboard","createCursorKeys","group","scoreNumber1","font","fill","align","scoreNumber2","scoreNumber3","removeCallback","load","spritesheet","frameWidth","frameHeight","tilemapTiledJSON","movePlayerManager","player","destroy","playersToAddSubscription","getPlayersToAdd","sort","a","b","counter","setScoreText","has","set","play","sendPlayerPosition","overlap","collectCoin","playerToRemoveSubscription","getPlayerToRemove","filter","playerToUpdateSubscription","getPlayerToUpdate","currentPlayer","changeAnimationFrameForOtherPlayers","lastX","lastY","lastAngle","angle","dataProvider","subscriptionDataProvider","unsubscribe","positionSender","positionSenderSubscription","addRequest","sendPosition","getDirection","callback","factor","times","internalCallback","tick","window","setTimeout","chars","playersArray","element","left","isDown","setVelocity","setAngle","right","up","down","monsterToUpdateSubscription","getMonsterToUpdate","sprite","disconnect","figureKey","animKey","HORIZON","VERTICAL","Scene","provide","useClass","serviceToCommunication","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,qE,CAIA;;;AACO,QAAMC,oBAAoB,GAAG,CAAC,IAAD,EAAO,yBAAP,EAAkC,mBAAlC,EAAuD,kBAAvD,EAA2E,MAA3E,CAA7B,C,CAEP;AACA;AACA;;AACO,QAAMC,iBAAiB,GAAG,0CAA1B,C,CACP;AACA;;AACO,QAAMC,aAAa,GAAG,wBAAtB,C,CACP;AACA;AACA;;AACO,QAAMC,kBAAkB,GAAG,iDAA3B,C,CACP;AACA;;AACO,QAAMC,gBAAgB,GAAI,6BAA1B,C,CACP;AAEA;;AACO,QAAMC,eAAe,GAAG,2DAAxB;AACA,QAAMC,mBAAmB,GAAG,+DAA5B;AACA,QAAMC,cAAc,GAAG,kBAAvB;;;;;;;;;;;;;;AC1BP;;AACA;;;;;;;AAOA;AAEA,QAAIC,IAAI,GAAG,mBAAO;AAAC;AAAA,uDAAD,CAAlB;;AACA,QAAIC,IAAI,GAAGD,IAAX;AACA,QAAIE,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;AAEAF,QAAI,CAACG,YAAL,CAAkB,iBAAlB,EAAqC,IAArC,EAA2CF,MAA3C;AACA;;;;;;;;;;;AAUAG,SAAK,CAACC,SAAN,GAAkB,UAASC,QAAT,EAAmB;AACnCP,UAAI,CAACQ,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,KAFD;;AAGAN,QAAI,CAACS,QAAL,CAAcL,KAAK,CAACC,SAApB,EAA+BN,IAAI,CAACQ,OAApC;;AACA,QAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAP,WAAK,CAACC,SAAN,CAAgBO,WAAhB,GAA8B,iBAA9B;AACD;;AAID,QAAIb,IAAI,CAACQ,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAT,WAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BC,QAA1B,GAAqC,UAASC,mBAAT,EAA8B;AACjE,eAAOZ,KAAK,CAACC,SAAN,CAAgBU,QAAhB,CAAyBC,mBAAzB,EAA8C,IAA9C,CAAP;AACD,OAFD;AAKA;;;;;;;;;;;AASAZ,WAAK,CAACC,SAAN,CAAgBU,QAAhB,GAA2B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACxD,YAAIC,CAAJ;AAAA,YAAOC,GAAG,GAAG;AACXC,mBAAS,EAAEtB,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADA;AAEXK,mBAAS,EAAExB,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AAFA,SAAb;;AAKA,YAAID,eAAJ,EAAqB;AACnBG,aAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,eAAOE,GAAP;AACD,OAVD;AAWC;AAGD;;;;;;;AAKAhB,SAAK,CAACC,SAAN,CAAgBoB,iBAAhB,GAAoC,UAASC,KAAT,EAAgB;AAClD,UAAIC,MAAM,GAAG,IAAI5B,IAAI,CAAC6B,YAAT,CAAsBF,KAAtB,CAAb;AACA,UAAIR,GAAG,GAAG,IAAId,KAAK,CAACC,SAAV,EAAV;AACA,aAAOD,KAAK,CAACC,SAAN,CAAgBwB,2BAAhB,CAA4CX,GAA5C,EAAiDS,MAAjD,CAAP;AACD,KAJD;AAOA;;;;;;;;;AAOAvB,SAAK,CAACC,SAAN,CAAgBwB,2BAAhB,GAA8C,UAASX,GAAT,EAAcS,MAAd,EAAsB;AAClE,aAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,YAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,YAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,gBAAQD,KAAR;AACA,eAAK,CAAL;AACE,gBAAIE,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACkB,YAAJ,CAAiBF,KAAjB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACmB,YAAJ,CAAiBH,KAAjB;AACA;;AACF;AACEP,kBAAM,CAACW,SAAP;AACA;AAXF;AAaD;;AACD,aAAOpB,GAAP;AACD,KArBD;AAwBA;;;;;;AAIAd,SAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0ByB,eAA1B,GAA4C,YAAW;AACrD,UAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,EAAb;AACArC,WAAK,CAACC,SAAN,CAAgBqC,uBAAhB,CAAwC,IAAxC,EAA8CF,MAA9C;AACA,aAAOA,MAAM,CAACG,eAAP,EAAP;AACD,KAJD;AAOA;;;;;;;;;AAOAvC,SAAK,CAACC,SAAN,CAAgBqC,uBAAhB,GAA0C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAClE,UAAIrB,CAAC,GAAG0B,SAAR;AACA1B,OAAC,GAAGyB,OAAO,CAACE,YAAR,EAAJ;;AACA,UAAI3B,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACI,YAAR,EAAJ;;AACA,UAAI7B,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;AACF,KAhBD;AAmBA;;;;;;AAIAf,SAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BgC,YAA1B,GAAyC,YAAW;AAClD;AAAO;AAAuB/C,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BsB,YAA1B,GAAyC,UAASF,KAAT,EAAgB;AACvD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BkC,YAA1B,GAAyC,YAAW;AAClD;AAAO;AAAuBjD,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BuB,YAA1B,GAAyC,UAASH,KAAT,EAAgB;AACvD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;;AAKAlC,QAAI,CAACkD,MAAL,CAAYC,MAAZ,CAAmB9D,OAAnB,EAA4Be,KAA5B;;;;;;;;;;;;;;ACpMA;;AACA;;;;;;;AAOA;AAEA,QAAIL,IAAI,GAAG,mBAAO;AAAC;AAAA,uDAAD,CAAlB;;AACA,QAAIC,IAAI,GAAGD,IAAX;AACA,QAAIE,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;AAEAF,QAAI,CAACG,YAAL,CAAkB,oBAAlB,EAAwC,IAAxC,EAA8CF,MAA9C;AACA;;;;;;;;;;;AAUAG,SAAK,CAACgD,YAAN,GAAqB,UAAS9C,QAAT,EAAmB;AACtCP,UAAI,CAACQ,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,KAFD;;AAGAN,QAAI,CAACS,QAAL,CAAcL,KAAK,CAACgD,YAApB,EAAkCrD,IAAI,CAACQ,OAAvC;;AACA,QAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAP,WAAK,CAACgD,YAAN,CAAmBxC,WAAnB,GAAiC,oBAAjC;AACD;;AAID,QAAIb,IAAI,CAACQ,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAT,WAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6BC,QAA7B,GAAwC,UAASC,mBAAT,EAA8B;AACpE,eAAOZ,KAAK,CAACgD,YAAN,CAAmBrC,QAAnB,CAA4BC,mBAA5B,EAAiD,IAAjD,CAAP;AACD,OAFD;AAKA;;;;;;;;;;;AASAZ,WAAK,CAACgD,YAAN,CAAmBrC,QAAnB,GAA8B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3D,YAAIC,CAAJ;AAAA,YAAOC,GAAG,GAAG;AACX9B,YAAE,EAAES,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADO;AAEXG,mBAAS,EAAEtB,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFA;AAGXK,mBAAS,EAAExB,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHA;AAIXmC,2BAAiB,EAAEtD,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAJR;AAKXoC,mBAAS,EAAEvD,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AALA,SAAb;;AAQA,YAAID,eAAJ,EAAqB;AACnBG,aAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,eAAOE,GAAP;AACD,OAbD;AAcC;AAGD;;;;;;;AAKAhB,SAAK,CAACgD,YAAN,CAAmB3B,iBAAnB,GAAuC,UAASC,KAAT,EAAgB;AACrD,UAAIC,MAAM,GAAG,IAAI5B,IAAI,CAAC6B,YAAT,CAAsBF,KAAtB,CAAb;AACA,UAAIR,GAAG,GAAG,IAAId,KAAK,CAACgD,YAAV,EAAV;AACA,aAAOhD,KAAK,CAACgD,YAAN,CAAmBvB,2BAAnB,CAA+CX,GAA/C,EAAoDS,MAApD,CAAP;AACD,KAJD;AAOA;;;;;;;;;AAOAvB,SAAK,CAACgD,YAAN,CAAmBvB,2BAAnB,GAAiD,UAASX,GAAT,EAAcS,MAAd,EAAsB;AACrE,aAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,YAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,YAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,gBAAQD,KAAR;AACA,eAAK,CAAL;AACE,gBAAIE,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACqC,KAAJ,CAAUrB,KAAV;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACkB,YAAJ,CAAiBF,KAAjB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACmB,YAAJ,CAAiBH,KAAjB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAAC6B,UAAP,EAAnC;AACAtC,eAAG,CAACuC,oBAAJ,CAAyBvB,KAAzB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACwC,YAAJ,CAAiBxB,KAAjB;AACA;;AACF;AACEP,kBAAM,CAACW,SAAP;AACA;AAvBF;AAyBD;;AACD,aAAOpB,GAAP;AACD,KAjCD;AAoCA;;;;;;AAIAd,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6ByB,eAA7B,GAA+C,YAAW;AACxD,UAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,EAAb;AACArC,WAAK,CAACgD,YAAN,CAAmBV,uBAAnB,CAA2C,IAA3C,EAAiDF,MAAjD;AACA,aAAOA,MAAM,CAACG,eAAP,EAAP;AACD,KAJD;AAOA;;;;;;;;;AAOAvC,SAAK,CAACgD,YAAN,CAAmBV,uBAAnB,GAA6C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrE,UAAIrB,CAAC,GAAG0B,SAAR;AACA1B,OAAC,GAAGyB,OAAO,CAACe,KAAR,EAAJ;;AACA,UAAIxC,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACE,YAAR,EAAJ;;AACA,UAAI3B,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACI,YAAR,EAAJ;;AACA,UAAI7B,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACgB,oBAAR,EAAJ;;AACA,UAAIzC,CAAC,CAAC0C,MAAF,GAAW,CAAf,EAAkB;AAChBrB,cAAM,CAACsB,WAAP,CACE,CADF,EAEE3C,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACmB,YAAR,EAAJ;;AACA,UAAI5C,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;AACF,KArCD;AAwCA;;;;;;AAIAf,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6B6C,KAA7B,GAAqC,YAAW;AAC9C;AAAO;AAAuB5D,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6ByC,KAA7B,GAAqC,UAASrB,KAAT,EAAgB;AACnD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6BgC,YAA7B,GAA4C,YAAW;AACrD;AAAO;AAAuB/C,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6BsB,YAA7B,GAA4C,UAASF,KAAT,EAAgB;AAC1D,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6BkC,YAA7B,GAA4C,YAAW;AACrD;AAAO;AAAuBjD,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6BuB,YAA7B,GAA4C,UAASH,KAAT,EAAgB;AAC1D,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6B8C,oBAA7B,GAAoD,YAAW;AAC7D;AAAO;AAAuB7D,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6B2C,oBAA7B,GAAoD,UAASvB,KAAT,EAAgB;AAClE,aAAOnC,IAAI,CAACQ,OAAL,CAAayD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2C9B,KAA3C,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6BiD,YAA7B,GAA4C,YAAW;AACrD;AAAO;AAAuBhE,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAACgD,YAAN,CAAmBtC,SAAnB,CAA6B4C,YAA7B,GAA4C,UAASxB,KAAT,EAAgB;AAC1D,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;;AAKAlC,QAAI,CAACkD,MAAL,CAAYC,MAAZ,CAAmB9D,OAAnB,EAA4Be,KAA5B;;;;;;;;;;;;;;AC9RA;;AACA;;;;;;;AAOA;AAEA,QAAIL,IAAI,GAAG,mBAAO;AAAC;AAAA,uDAAD,CAAlB;;AACA,QAAIC,IAAI,GAAGD,IAAX;AACA,QAAIE,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;AAEAF,QAAI,CAACG,YAAL,CAAkB,mBAAlB,EAAuC,IAAvC,EAA6CF,MAA7C;AACA;;;;;;;;;;;AAUAG,SAAK,CAAC6D,WAAN,GAAoB,UAAS3D,QAAT,EAAmB;AACrCP,UAAI,CAACQ,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,KAFD;;AAGAN,QAAI,CAACS,QAAL,CAAcL,KAAK,CAAC6D,WAApB,EAAiClE,IAAI,CAACQ,OAAtC;;AACA,QAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAP,WAAK,CAAC6D,WAAN,CAAkBrD,WAAlB,GAAgC,mBAAhC;AACD;;AAID,QAAIb,IAAI,CAACQ,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAT,WAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4BC,QAA5B,GAAuC,UAASC,mBAAT,EAA8B;AACnE,eAAOZ,KAAK,CAAC6D,WAAN,CAAkBlD,QAAlB,CAA2BC,mBAA3B,EAAgD,IAAhD,CAAP;AACD,OAFD;AAKA;;;;;;;;;;;AASAZ,WAAK,CAAC6D,WAAN,CAAkBlD,QAAlB,GAA6B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1D,YAAIC,CAAJ;AAAA,YAAOC,GAAG,GAAG;AACX8C,kBAAQ,EAAEnE,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADC;AAEXG,mBAAS,EAAEtB,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFA;AAGXK,mBAAS,EAAExB,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHA;AAIXiD,eAAK,EAAEpE,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAJI;AAKXkD,uBAAa,EAAErE,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CALJ;AAMXmD,iBAAO,EAAEtE,IAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AANE,SAAb;;AASA,YAAID,eAAJ,EAAqB;AACnBG,aAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,eAAOE,GAAP;AACD,OAdD;AAeC;AAGD;;;;;;;AAKAhB,SAAK,CAAC6D,WAAN,CAAkBxC,iBAAlB,GAAsC,UAASC,KAAT,EAAgB;AACpD,UAAIC,MAAM,GAAG,IAAI5B,IAAI,CAAC6B,YAAT,CAAsBF,KAAtB,CAAb;AACA,UAAIR,GAAG,GAAG,IAAId,KAAK,CAAC6D,WAAV,EAAV;AACA,aAAO7D,KAAK,CAAC6D,WAAN,CAAkBpC,2BAAlB,CAA8CX,GAA9C,EAAmDS,MAAnD,CAAP;AACD,KAJD;AAOA;;;;;;;;;AAOAvB,SAAK,CAAC6D,WAAN,CAAkBpC,2BAAlB,GAAgD,UAASX,GAAT,EAAcS,MAAd,EAAsB;AACpE,aAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,YAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,YAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,gBAAQD,KAAR;AACA,eAAK,CAAL;AACE,gBAAIE,KAAK;AAAG;AAAuBP,kBAAM,CAAC6B,UAAP,EAAnC;AACAtC,eAAG,CAACoD,WAAJ,CAAgBpC,KAAhB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACkB,YAAJ,CAAiBF,KAAjB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACmB,YAAJ,CAAiBH,KAAjB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACqD,QAAJ,CAAarC,KAAb;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAAC6B,UAAP,EAAnC;AACAtC,eAAG,CAACsD,gBAAJ,CAAqBtC,KAArB;AACA;;AACF,eAAK,CAAL;AACE,gBAAIA,KAAK;AAAG;AAAuBP,kBAAM,CAACQ,SAAP,EAAnC;AACAjB,eAAG,CAACuD,UAAJ,CAAevC,KAAf;AACA;;AACF;AACEP,kBAAM,CAACW,SAAP;AACA;AA3BF;AA6BD;;AACD,aAAOpB,GAAP;AACD,KArCD;AAwCA;;;;;;AAIAd,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4ByB,eAA5B,GAA8C,YAAW;AACvD,UAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,EAAb;AACArC,WAAK,CAAC6D,WAAN,CAAkBvB,uBAAlB,CAA0C,IAA1C,EAAgDF,MAAhD;AACA,aAAOA,MAAM,CAACG,eAAP,EAAP;AACD,KAJD;AAOA;;;;;;;;;AAOAvC,SAAK,CAAC6D,WAAN,CAAkBvB,uBAAlB,GAA4C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpE,UAAIrB,CAAC,GAAG0B,SAAR;AACA1B,OAAC,GAAGyB,OAAO,CAAC8B,WAAR,EAAJ;;AACA,UAAIvD,CAAC,CAAC0C,MAAF,GAAW,CAAf,EAAkB;AAChBrB,cAAM,CAACsB,WAAP,CACE,CADF,EAEE3C,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACE,YAAR,EAAJ;;AACA,UAAI3B,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACI,YAAR,EAAJ;;AACA,UAAI7B,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAAC+B,QAAR,EAAJ;;AACA,UAAIxD,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACgC,gBAAR,EAAJ;;AACA,UAAIzD,CAAC,CAAC0C,MAAF,GAAW,CAAf,EAAkB;AAChBrB,cAAM,CAACsB,WAAP,CACE,CADF,EAEE3C,CAFF;AAID;;AACDA,OAAC,GAAGyB,OAAO,CAACiC,UAAR,EAAJ;;AACA,UAAI1D,CAAC,KAAK,CAAV,EAAa;AACXqB,cAAM,CAACO,UAAP,CACE,CADF,EAEE5B,CAFF;AAID;AACF,KA5CD;AA+CA;;;;;;AAIAf,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4B4D,WAA5B,GAA0C,YAAW;AACnD;AAAO;AAAuB3E,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4BwD,WAA5B,GAA0C,UAASpC,KAAT,EAAgB;AACxD,aAAOnC,IAAI,CAACQ,OAAL,CAAayD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2C9B,KAA3C,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4BgC,YAA5B,GAA2C,YAAW;AACpD;AAAO;AAAuB/C,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4BsB,YAA5B,GAA2C,UAASF,KAAT,EAAgB;AACzD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4BkC,YAA5B,GAA2C,YAAW;AACpD;AAAO;AAAuBjD,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4BuB,YAA5B,GAA2C,UAASH,KAAT,EAAgB;AACzD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4B6D,QAA5B,GAAuC,YAAW;AAChD;AAAO;AAAuB5E,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4ByD,QAA5B,GAAuC,UAASrC,KAAT,EAAgB;AACrD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4B8D,gBAA5B,GAA+C,YAAW;AACxD;AAAO;AAAuB7E,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4B0D,gBAA5B,GAA+C,UAAStC,KAAT,EAAgB;AAC7D,aAAOnC,IAAI,CAACQ,OAAL,CAAayD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2C9B,KAA3C,CAAP;AACD,KAFD;AAKA;;;;;;AAIA9B,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4B+D,UAA5B,GAAyC,YAAW;AAClD;AAAO;AAAuB9E,YAAI,CAACQ,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,KAFD;AAKA;;;;;;AAIAlB,SAAK,CAAC6D,WAAN,CAAkBnD,SAAlB,CAA4B2D,UAA5B,GAAyC,UAASvC,KAAT,EAAgB;AACvD,aAAOnC,IAAI,CAACQ,OAAL,CAAa0C,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCf,KAAxC,CAAP;AACD,KAFD;;AAKAlC,QAAI,CAACkD,MAAL,CAAYC,MAAZ,CAAmB9D,OAAnB,EAA4Be,KAA5B;;;;;;;;;;;;;;;;AC5TA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAM0E,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,MAAP;AAAeC,eAAS,EAAE;AAA1B,KADqB,EAErB;AAACD,UAAI,EAAE,MAAP;AAAeC,eAAS,EAAE;AAA1B,KAFqB,EAGrB;AAACD,UAAI,EAAE,IAAP;AAAaE,gBAAU,EAAE;AAAzB,KAHqB,CAAvB;;QAUaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERzF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagG,Y,GACX,wBAAc;AAAA;AACb,K;;;uBAFUA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,2FAAD,C;AAAkB,gBAPpB,CACP,uEADO,EAEP,qEAFO,EAGP,oEAHO,EAIP,gEAAYN,OAAZ,EAJO,EAKP,2DALO,CAOoB;;;;0HAGlBM,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,kEAckB,EAblB,0FAakB,EAZlB,kEAYkB;AAZL,kBAGb,uEAHa,EAIb,qEAJa,EAKb,oEALa,EAKG,+DALH,EAOb,2DAPa;AAYK,O;AALP,K;;;;;sEAKFA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,0FAHY,EAIZ,kEAJY,CADN;AAORN,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,oEAHO,EAIP,gEAAYD,OAAZ,EAJO,EAKP,2DALO,CAPD;AAcRQ,mBAAS,EAAE,CAAC,2FAAD,CAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;sEAblB,0F,EAAkB,m7EAFlB,2DAEkB,EADlB,kEACkB,EAAlB,0FAAkB,EAClB,kEADkB,C,EACL,0yB;;;;;;;;;;;;;;;;;AClBjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,kB;;;AAHb;AAAA;;AAKqB,aAAAC,YAAA,GAAe,IAAIC,KAAJ,EAAf;AAYpB;;;;+CAV0BzG,E,EAAI0G,oB,EAAsBC,gB,EAAkB5B,O,EAAS6B,I,EAAM;AAC9E;AACA;AACA;AACA,eAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,IAAI,8EAAJ,CAAwB7G,EAAxB,EAA4B0G,oBAA5B,EAAkDC,gBAAlD,EAAoE5B,OAApE,EAA6E6B,IAA7E,CAAvB;AACH;;;kDAEsB;AACnB,iBAAO,KAAKJ,YAAZ;AACH;;;;;;;uBAbQD,kB;AAAkB,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFf;;;;;sEAEHA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACRO,oBAAU,EAAE;AADJ,S;AAGmB,Q;;;;;;;;;;;;;;;;;;ACN/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,mB;;;AAHb;AAAA;;AAKY,aAAAC,QAAA,GAA2B,IAAI,sDAAJ,EAA3B;AA6DX;;;;mCAzDchH,E,EAAIiH,C,EAAGC,C,EAAG;AACjB;AACA;AACA;AACA,eAAKF,QAAL,CAAcG,OAAd,CAAsB,IAAI,sDAAJ,CAAYnH,EAAZ,EAAgBiH,CAAhB,EAAmBC,CAAnB,CAAtB;AACH;;;mCAEUlH,E,EAAI;AACX,cAAG,KAAKgH,QAAL,CAAczC,MAAd,GAAuB,CAA1B,EAA6B;AACzB,gBAAM6C,OAAO,GAAG,KAAKJ,QAAL,CAAcK,KAA9B;;AAEA,gBAAGD,OAAO,CAACpH,EAAR,GAAaA,EAAhB,EAAoB;AAChB,qBAAO,IAAP;AACH;AACJ;;AAED,iBAAO,KAAKgH,QAAL,CAAczC,MAAd,GAAuB,CAA9B,EAAiC;AAC7B,gBAAM6C,QAAO,GAAG,KAAKJ,QAAL,CAAcM,OAAd,EAAhB;;AAEA,gBAAGF,QAAO,CAACpH,EAAR,KAAeA,EAAlB,EAAsB;AAClB,mBAAKuH,kBAAL,GAA0BH,QAA1B;AACA,qBAAOA,QAAP;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;;6CAEoBpH,E,EAAI;AACrB,cAAG,KAAKgH,QAAL,CAAczC,MAAd,GAAuB,CAA1B,EAA6B;AACzB,gBAAM6C,OAAO,GAAG,KAAKJ,QAAL,CAAcK,KAA9B;AACAG,mBAAO,CAACC,KAAR,CAAcL,OAAd;;AACA,gBAAGA,OAAO,CAACpH,EAAR,GAAaA,EAAhB,EAAoB;AAChB,qBAAO,IAAP;AACH;AACJ;;AAED,iBAAO,KAAKgH,QAAL,CAAczC,MAAd,GAAuB,CAA9B,EAAiC;AAC7B,gBAAM6C,SAAO,GAAG,KAAKJ,QAAL,CAAcM,OAAd,EAAhB;;AAEA,gBAAGF,SAAO,CAACpH,EAAR,KAAeA,EAAlB,EAAsB;AAClB,qBAAO,KAAKuH,kBAAZ;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;;4BAEqB;AAClB,iBAAO,KAAKG,mBAAZ;AACH,S;0BAEsB9E,K,EAAgB;AACnC,eAAK8E,mBAAL,GAA2B9E,KAA3B;AACH;;;0BAEmBA,K,EAAe;AAC/B,eAAK+E,SAAL,GAAiB/E,KAAjB;AACH;;;;;;;uBA9DQmE,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFhB;;;;;sEAEHA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACRD,oBAAU,EAAE;AADJ,S;AAGoB,Q;;;;;;;;;;;;;;;;;;ACRhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMsBc,Y;;;AAelB,4BAAsBC,SAAtB,EAAiC;AAAA;;AAVvB,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AACA,aAAAC,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AACA,aAAAC,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AACA,aAAAC,eAAA,GAAkB,IAAI,4CAAJ,EAAlB;AACA,aAAAC,UAAA,GAAa,IAAI,4CAAJ,EAAb;AAEA,aAAAC,SAAA,GAAY,IAAI,4CAAJ,EAAZ;AACA,aAAAC,WAAA,GAAc,IAAI,4CAAJ,EAAd;AACA,aAAAC,WAAA,GAAc,IAAI,4CAAJ,EAAd;AAGN,aAAKR,SAAL,GAAiBA,SAAjB;AACH;;;;mCASU;AACP,iBAAO,KAAKS,KAAL,CAAWC,YAAX,EAAP;AACH;;;0CAEiB;AACd,iBAAO,KAAKT,YAAL,CAAkBS,YAAlB,EAAP;AACH;;;4CAEmB;AAChB,iBAAO,KAAKR,cAAL,CAAoBQ,YAApB,EAAP;AACH;;;4CAEmB;AAChB,iBAAO,KAAKP,cAAL,CAAoBO,YAApB,EAAP;AACH;;;6CAEoB;AACjB,iBAAO,KAAKN,eAAL,CAAqBM,YAArB,EAAP;AACH;;;wCAEe;AACZ,iBAAO,KAAKL,UAAL,CAAgBK,YAAhB,EAAP;AACH;;;uCAEc;AACX,iBAAO,KAAKJ,SAAL,CAAeI,YAAf,EAAP;AACH;;;0CAEiB;AACd,iBAAO,KAAKF,WAAL,CAAiBE,YAAjB,EAAP;AACH;;;yCAUgB;AACb,iBAAO,KAAKH,WAAL,CAAiBG,YAAjB,EAAP;AACH;;;4BAVgB;AACb,iBAAO,KAAKC,WAAZ;AACH,S;0BAEc5F,K,EAAO;AAClB,eAAK4F,WAAL,GAAmB5F,KAAnB;AACH;;;;;;;;;;;;;;;;;;;;;ACvEL;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAY6F,SAAZ;;AAAA,eAAYA,SAAZ,EAAqB;AACjB;AACA;AACH,KAHD,EAAYA,SAAS,KAATA,SAAS,MAArB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,iBAAZ;;AAAA,eAAYA,iBAAZ,EAA6B;AACzB;AACA;AACA;AACH,KAJD,EAAYA,iBAAiB,KAAjBA,iBAAiB,MAA7B;;;;;;;;;;;;;;;;;ACEA;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,a;;;;;;;;;mCACEC,I,EAAM;AACb,iBAAOC,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,IAAhB,CAAP;AACH;;;sCAEaH,I,EAAM;AAChB,iBAAOC,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,IAAhB,CAAP;AACH;;;qCAEYH,I,EAAM;AACf,iBAAOC,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,IAAhB,CAAP;AACH;;;+BAEMH,I,EAAM;AACT,iBAAOA,IAAP;AACH;;;+CAEsBhE,Q,EAAkB;AACrC,iBAAO;AAAC,wBAAYA;AAAb,WAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACpBL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIaoE,iB;;;;;;;;;mCACEJ,I,EAAM;AACb,iBAAO,yEAAUzG,iBAAV,CAA4ByG,IAAI,CAACK,UAAjC,EAA6CxH,QAA7C,EAAP;AACH;;;sCAEamH,I,EAAM;AAChB,iBAAO,+EAAazG,iBAAb,CAA+ByG,IAAI,CAACK,UAApC,EAAgDxH,QAAhD,EAAP;AACH;;;qCAEYmH,I,EAAM;AACf,iBAAO,6EAAYzG,iBAAZ,CAA8ByG,IAAI,CAACK,UAAnC,EAA+CxH,QAA/C,EAAP;AACH;;;+BAEMmH,I,EAAI;AACP,cAAMM,WAAW,GAAG,IAAI,4EAAJ,EAApB;AACAA,qBAAW,CAAClE,WAAZ,CAAwB4D,IAAI,CAAChE,QAA7B;AACAsE,qBAAW,CAACpG,YAAZ,CAAyB8F,IAAI,CAAC7G,SAA9B;AACAmH,qBAAW,CAACnG,YAAZ,CAAyB6F,IAAI,CAAC3G,SAA9B;AACAiH,qBAAW,CAACjE,QAAZ,CAAqB2D,IAAI,CAAC/D,KAA1B;AACAqE,qBAAW,CAAChE,gBAAZ,CAA6B0D,IAAI,CAAC9D,aAAlC;AACAoE,qBAAW,CAAC/D,UAAZ,CAAuByD,IAAI,CAAC7D,OAA5B;AAEA,iBAAOmE,WAAP;AACH;;;+CAEsBtE,Q,EAAkB;AACrC,iBAAOA,QAAP;AACH;;;;;;;;;;;;;;;;;;;;;AChCL;AAAA;;;AAAA;AAAA;AAAA;;QAAauE,gB,GAIT,0BAAYC,MAAZ,EAA4BC,IAA5B,EAA0C;AAAA;;AACtC,WAAKD,MAAL,GAAcA,MAAd;AACA,WAAKC,IAAL,GAAYA,IAAZ;AACH,K;;;;;;;;;;;;;;;;;ACPL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoBaC,gB;;;;;;;AAMT,gCACYC,kBADZ,EAEYC,YAFZ,EAE6C;AAAA;;AAAA;;AAEzC,kCAAM,iEAAN;AAHQ,cAAAD,kBAAA,GAAAA,kBAAA;AACA,cAAAC,YAAA,GAAAA,YAAA;AAqKZ,cAAAC,QAAA,GAAW,MAAKC,MAAL,CAAY,KAAZ,CAAX;;AAlKI,cAAKC,YAAL,CAAkB,IAAI,mEAAJ,EAAlB;;AAHyC;AAI5C;;;;+CAEsB;AAAA;;AACnB;AACA;AACA,eAAKrB,KAAL,GAAa,IAAI,oDAAJ,CAAuC,qEAAkBsB,UAAzD,CAAb;AAEA,eAAKC,WAAL,GAAmB,IAAI,qDAAJ,CAAW;AAC1BC,qBAAS,EAAE,KAAKjC,SADU;AAE1BkC,iBAAK,EAAE,eAAUC,GAAV,EAAe;AAClBxC,qBAAO,CAACyC,GAAR,CAAYD,GAAZ;AACH,aAJyB;AAK1B;AACAE,4BAAgB,EAAE,IANQ;AAO1BC,0BAAc,EAAE,IAPU;AAQ1BC,6BAAiB,EAAE,IARO;AAS1BC,6BAAiB,EAAE;AATO,WAAX,CAAnB;;AAYA,eAAKR,WAAL,CAAiBE,KAAjB,GAAyB,YAAM,CAAE,CAAjC;;AAEA,eAAKF,WAAL,CAAiBS,SAAjB,GAA6B,UAACC,KAAD,EAAW;AAEpC/C,mBAAO,CAACC,KAAR,CAAc8C,KAAd;;AACA,kBAAI,CAACV,WAAL,CAAiBW,SAAjB,CAA2B,qBAA3B,EAAkD,UAACC,eAAD,EAAqB;AACnE,oBAAI,CAAC3C,YAAL,CAAkB4C,IAAlB,CAAuB7B,IAAI,CAACC,KAAL,CAAW2B,eAAe,CAAC1B,IAA3B,CAAvB;;AACAvB,qBAAO,CAACC,KAAR,CAAc,mCAAd;AACH,aAHD;;AAKA,kBAAI,CAACoC,WAAL,CAAiBW,SAAjB,CAA2B,uBAA3B,EAAoD,UAACzC,cAAD,EAAoB;AACpE,oBAAI,CAACA,cAAL,CAAoB2C,IAApB,CAAyB,MAAI,CAACC,SAAL,CAAeC,YAAf,CAA4B7C,cAA5B,CAAzB;;AACAP,qBAAO,CAACC,KAAR,CAAc,qCAAd;AACH,aAHD;;AAKA,kBAAI,CAACoC,WAAL,CAAiBW,SAAjB,CAA2B,uBAA3B,EAAoD,UAACxC,cAAD,EAAoB;AACpE,kBAAM6C,YAAY,GAAG,MAAI,CAACF,SAAL,CAAeC,YAAf,CAA4B5C,cAA5B,CAArB;;AAEA,kBAAMtB,oBAAoB,GAAG,IAAIoE,IAAJ,GAAWC,OAAX,KAAuBC,MAAM,CAAChD,cAAc,CAACiD,OAAf,CAAuBtE,gBAAxB,CAA1D,CAHoE,CAIpE;;AAEA,oBAAI,CAAC4C,kBAAL,CAAwB2B,sBAAxB,CAA+CL,YAAY,CAACjG,QAA5D,EAAsE8B,oBAAtE,EACIsB,cAAc,CAACiD,OAAf,CAAuBtE,gBAD3B,EAC6CkE,YAAY,CAAC9F,OAD1D,EACmEiD,cAAc,CAACiD,OAAf,CAAuBE,aAD1F;;AAGA,kBAAIN,YAAY,CAACjG,QAAb,KAA0B,MAAI,CAACwG,UAAnC,EAA+C;AAC3C,oBAAMhE,OAAO,GAAG,MAAI,CAACoC,YAAL,CAAkB6B,UAAlB,CAA6BR,YAAY,CAAC9F,OAA1C,CAAhB;;AACA,sBAAI,CAACqD,WAAL,CAAiBsC,IAAjB,CAAsBG,YAAY,CAAChG,KAAnC;;AACA,oBAAIuC,OAAO,KAAK,IAAZ,KAAqBA,OAAO,CAACH,CAAR,KAAc4D,YAAY,CAAC9I,SAA3B,IAAwCqF,OAAO,CAACF,CAAR,KAAc2D,YAAY,CAAC5I,SAAxF,CAAJ,EAAwG;AACpG,wBAAI,CAAC+F,cAAL,CAAoB0C,IAApB,CAAyBG,YAAzB;AACH;AACJ,eAND,MAMO;AACH,sBAAI,CAAC7C,cAAL,CAAoB0C,IAApB,CAAyBG,YAAzB;AACH;AACJ,aAlBD;;AAoBA,kBAAI,CAAChB,WAAL,CAAiBW,SAAjB,CAA2B,wBAA3B,EAAqD,UAACc,OAAD,EAAa;AAC9D,kBAAMC,aAAa,GAAG,MAAI,CAACZ,SAAL,CAAea,aAAf,CAA6BF,OAA7B,CAAtB;;AACA,oBAAI,CAAC/B,kBAAL,CAAwB2B,sBAAxB,CAA+CK,aAAa,CAACvL,EAA7D,EAAiE,CAAjE,EAAmE,CAAnE,EAAqE,CAArE,EAAuE,CAAvE;;AACA,oBAAI,CAACiI,eAAL,CAAqByC,IAArB,CAA0Ba,aAA1B;AACH,aAJD;;AAMA,kBAAI,CAAC1B,WAAL,CAAiBW,SAAjB,CAA2B,uBAA3B,EAAoD,YAAM;AACtD,oBAAI,CAACnC,WAAL,CAAiBqC,IAAjB;AACH,aAFD;;AAIA,kBAAI,CAACb,WAAL,CAAiBW,SAAjB,CAA2B,kBAA3B,EAA+C,UAACiB,YAAD,EAAkB;AAC7D,oBAAI,CAACtD,SAAL,CAAeuC,IAAf,CAAoB,MAAI,CAACC,SAAL,CAAee,UAAf,CAA0BD,YAA1B,CAApB;AACH,aAFD;;AAIA,kBAAI,CAAC5B,WAAL,CAAiBW,SAAjB,CAA2B,mBAA3B,EAAgD,UAACmB,mBAAD,EAAyB;AACrE,oBAAI,CAACzD,UAAL,CAAgBwC,IAAhB,CAAqB7B,IAAI,CAACC,KAAL,CAAW6C,mBAAmB,CAAC5C,IAA/B,CAArB;AACH,aAFD;;AAIA,kBAAI,CAACc,WAAL,CAAiBW,SAAjB,CAA2B,oBAA3B,EAAiD,UAACxC,cAAD,EAAoB;AACjE,kBAAM6C,YAAY,GAAG,MAAI,CAACF,SAAL,CAAeC,YAAf,CAA4B5C,cAA5B,CAArB;;AAEA,kBAAMtB,oBAAoB,GAAG,IAAIoE,IAAJ,GAAWC,OAAX,KAAuBC,MAAM,CAAChD,cAAc,CAACiD,OAAf,CAAuBtE,gBAAxB,CAA1D;;AAEA,oBAAI,CAAC4C,kBAAL,CAAwB2B,sBAAxB,CAA+CL,YAAY,CAACjG,QAA5D,EAAsE8B,oBAAtE,EACIsB,cAAc,CAACiD,OAAf,CAAuBtE,gBAD3B,EAC6CkE,YAAY,CAAC9F,OAD1D,EACmEiD,cAAc,CAACiD,OAAf,CAAuBE,aAD1F;;AAGA,kBAAM/D,OAAO,GAAG,MAAI,CAACoC,YAAL,CAAkBoC,oBAAlB,CAAuCf,YAAY,CAAC9F,OAApD,CAAhB;;AAEA,kBAAIqC,OAAO,KAAK,IAAhB,EAAsB;AAClByD,4BAAY,CAAC9I,SAAb,GAAyBqF,OAAO,CAACH,CAAjC;AACA4D,4BAAY,CAAC5I,SAAb,GAAyBmF,OAAO,CAACF,CAAjC;;AACA,sBAAI,CAACc,cAAL,CAAoB0C,IAApB,CAAyBG,YAAzB;AACH;AACJ,aAfD;;AAiBA,kBAAI,CAAChB,WAAL,CAAiBW,SAAjB,CAA2B,0BAA3B,EAAuD,UAACqB,eAAD,EAAqB,CAC3E,CADD;;AAGA,kBAAI,CAACvD,KAAL,CAAWoC,IAAX,CAAgB,qEAAkBoB,SAAlC;AACH,WAxED;;AA0EA,eAAKjC,WAAL,CAAiBkC,YAAjB,GAAgC,UAACxB,KAAD,EAAW;AACvC/C,mBAAO,CAACyC,GAAR,CAAY,4BAA4BM,KAAK,CAACU,OAAN,CAAc,SAAd,CAAxC;AACAzD,mBAAO,CAACyC,GAAR,CAAY,yBAAyBM,KAAK,CAACxB,IAA3C;AACH,WAHD;;AAKA,eAAKc,WAAL,CAAiBmC,QAAjB;AACH,S,CAED;;;;qCAEa;AACTxE,iBAAO,CAACC,KAAR,CAAc,cAAd;AACA,eAAKoC,WAAL,CAAiBoC,UAAjB;AACH;;;qCAEYC,U,EAAY;AACrB,cAAMC,sBAAsB,GAAG,KAAKxB,SAAL,CAAeyB,MAAf,CAAsBF,UAAtB,CAA/B;;AACA,cAAI,KAAKvB,SAAL,YAA0B,mEAA9B,EAA6C;AACzC,iBAAKd,WAAL,CAAiBwC,OAAjB,CAAyB;AACrBC,yBAAW,EAAE,oBADQ;AAErBvD,kBAAI,EAAEF,IAAI,CAAC0D,SAAL,CACFJ,sBADE,CAFe;AAKrBlB,qBAAO,EAAE;AACLtE,gCAAgB,EAAE,IAAImE,IAAJ,GAAWC,OAAX,GAAqByB,QAArB;AADb;AALY,aAAzB;AASH,WAVD,MAUO,IAAI,KAAK7B,SAAL,YAA0B,2EAA9B,EAAiD;AACpD,iBAAKd,WAAL,CAAiBwC,OAAjB,CAAyB;AACrBC,yBAAW,EAAE,6BADQ;AAErBrD,wBAAU,EAAEkD,sBAAsB,CAAClJ,eAAvB,EAFS;AAGrBgI,qBAAO,EAAE;AACL;AACAtE,gCAAgB,EAAE,IAAImE,IAAJ,GAAWC,OAAX,GAAqByB,QAArB;AAFb;AAHY,aAAzB;AAQH,WATM,MASA;AACH,iBAAK3C,WAAL,CAAiBwC,OAAjB,CAAyB;AACrBC,yBAAW,EAAE,kCADQ;AAErBrD,wBAAU,EAAEkD,sBAFS;AAGrBlB,qBAAO,EAAE;AACL;AACAtE,gCAAgB,EAAE,IAAImE,IAAJ,GAAWC,OAAX,GAAqByB,QAArB;AAFb;AAHY,aAAzB;AAQH;AACJ;;;mCAEU5H,Q,EAAkB;AACzB,eAAKiF,WAAL,CAAiBwC,OAAjB,CAAyB;AACrBC,uBAAW,EAAE,gBADQ;AAErBvD,gBAAI,EAAEF,IAAI,CAAC0D,SAAL,CAAe;AACjB,0BAAY3H;AADK,aAAf;AAFe,WAAzB;AAMH;;;kCAESA,Q,EAAkB;AACxB,eAAKiF,WAAL,CAAiBwC,OAAjB,CAAyB;AACrBC,uBAAW,EAAE,iBADQ;AAErBvD,gBAAI,EAAEF,IAAI,CAAC0D,SAAL,CAAe;AACjB,0BAAY3H;AADK,aAAf;AAFe,WAAzB;AAMH;;;+BAIML,M,EAAQ;AACX,cAAIkI,MAAM,GAAG,EAAb;AACA,cAAIC,UAAU,GAAG,gEAAjB;AACA,cAAIC,gBAAgB,GAAGD,UAAU,CAACnI,MAAlC;;AACA,eAAK,IAAIqI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrI,MAApB,EAA4BqI,CAAC,EAA7B,EAAiC;AAC7BH,kBAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACH;;AACD,iBAAOF,MAAP;AACH;;;qCAEY9B,S,EAAW;AACpB,eAAKA,SAAL,GAAiBA,SAAjB;AACH;;;;MA3LiC,0D;;;uBAAzBrB,gB,EAAgB,qI,EAAA,wI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa2D,e;;;AAIT,+BAAoBC,gBAApB,EAA0D;AAAA;;AAAtC,aAAAA,gBAAA,GAAAA,gBAAA;AAFZ,aAAAC,aAAA,GAAgB,0BAAhB;AAGP;;;;uDAE8B;AAC3B,eAAKC,oBAAL,CAA0B,KAAKF,gBAAL,CAAsBG,uBAAtB,EAA1B;AACH;;;6CAE4BzE,I,EAAW;AACpC,cAAM0E,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAM3K,KAAN;AAAA,mBAAgBA,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAAtC;AAAA,WAAjB,CADoC,CAC0B;;;AAC9D,cAAI4K,MAAM,GAAG,mEAAb;AACA,cAAIC,GAAG,GAAG7E,IAAI,CAAC8E,GAAL,CAAS,UAAAC,GAAG;AAAA,mBAAIH,MAAM,CAACE,GAAP,CAAW,UAAAE,SAAS;AAAA,qBAAI/E,IAAI,CAAC0D,SAAL,CAAeoB,GAAG,CAACC,SAAD,CAAlB,EAA+BN,QAA/B,CAAJ;AAAA,aAApB,EAAkEO,IAAlE,CAAuE,GAAvE,CAAJ;AAAA,WAAZ,CAAV;AACAL,gBAAM,GAAGA,MAAM,CAACE,GAAP,CAAW,UAASzG,CAAT,EAAU;AAAG,mBAAOA,CAAC,CAAC6G,WAAF,EAAP;AAAwB,WAAhD,CAAT;AACAL,aAAG,CAACM,OAAJ,CAAYP,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAZ;AACA,cAAIG,QAAQ,GAAGP,GAAG,CAACI,IAAJ,CAAS,MAAT,CAAf;AAEA,oEAAO,IAAII,IAAJ,CAAS,CAACD,QAAD,CAAT,EAAqB;AAACE,gBAAI,EAAE;AAAP,WAArB,CAAP,EAAiD,KAAKf,aAAtD;AACH;;;;;;;uBApBQF,e,EAAe,qI;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFZ;;;;;sEAEHA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACRnG,oBAAU,EAAE;AADJ,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaqH,a;;;AAIX,6BAAoBC,SAApB,EAAmD;AAAA;;AAA/B,aAAAA,SAAA,GAAAA,SAAA;AAClB,aAAKC,MAAL,GAAc;AACZH,cAAI,EAAE,8CAAOI,IADD;AAEZC,gBAAM,EAAE,IAFI;AAGZC,eAAK,EAAE,IAHK;AAIZC,eAAK,EAAE;AACLC,gBAAI,EAAE,8CAAOC,KAAP,CAAaC,GADd;AAELC,sBAAU,EAAE,8CAAOF,KAAP,CAAaG;AAFpB,WAJK;AAQZC,eAAK,EAAE,EARK;AASZC,gBAAM,EAAE,eATI;AAUZC,iBAAO,EAAE;AACP,uBAAS,QADF;AAEPC,kBAAM,EAAE;AACNC,qBAAO,EAAE;AAACjI,iBAAC,EAAE;AAAJ;AADH;AAFD,WAVG;AAgBZkI,aAAG,EAAE;AACHC,kBAAM,EAAE,EADL;AAEHC,2BAAe,EAAE;AAFd;AAhBO,SAAd;AAsBD;;;;mCAEU;AAEP9H,iBAAO,CAACC,KAAR,CAAc,wBAAd;AAEA,eAAK8H,UAAL,GAAkB,IAAI,8CAAOC,IAAX,CAAgB,KAAKnB,MAArB,CAAlB;AACA,eAAKkB,UAAL,CAAgBR,KAAhB,CAAsBU,GAAtB,CAA0B,MAA1B,EAAkC,KAAKrB,SAAvC;AACA,eAAKmB,UAAL,CAAgBR,KAAhB,CAAsBW,KAAtB,CAA4B,MAA5B;AAEAlI,iBAAO,CAACC,KAAR,CAAc,sCAAd;AACD;;;;;;;uBAtCQ0G,a,EAAa,2J;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,2D;AAAA;;;;;sEAAbA,a,EAAa;cALzB,uDAKyB;eALf;AACTnI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;ACT1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUI;;AAAmB;;AAA2E;;;;;;AAA3E;;AAAA;;;;QDFVyJ,a;;;AAKX,6BAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;;AAClB,YAAG,KAAKA,MAAL,CAAYC,oBAAZ,GAAmCC,MAAnC,CAA0CxH,KAA7C,EAAoD;AAClD,eAAKyH,MAAL,GAAc,KAAKH,MAAL,CAAYC,oBAAZ,GAAmCC,MAAnC,CAA0CxH,KAA1C,CAAgD0H,IAA9D;AACD;AACF;;;;kCAESpL,Q,EAAkB;AAC1B,eAAKgL,MAAL,CAAYK,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAAC3H,iBAAK,EAAE;AAAC0H,kBAAI,EAAEpL;AAAP;AAAR,WAA/B;AACD;;;;;;;uBAbU+K,a,EAAa,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,4G;AAAA;AAAA;ACR1B;;AACI;;AAAI;;AAAkC;;AACtC;;AACA;;AACA;;AACA;;AAAI;;AAA8B;;AAClC;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAAQ;AAAA,mBAAS,IAAAO,SAAA,cAAT;AAA4B,WAA5B;;AAAwH;;AAAK;;AAErI;;AAAI;;AAAI;;AAAI;;AACZ;;AAMJ;;;;AAVW;;AAAA;;AAC+B;;AAAA;;AAGlC;;AAAA;;;;;;;;;sEDFKP,a,EAAa;cALzB,uDAKyB;eALf;AACT3J,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;;QAAaiK,mB;;;AAOT,mCAAYnQ,EAAZ,EAAwBoQ,uBAAxB,EAAyDC,iBAAzD,EAAoFC,gBAApF,EAA8G1J,IAA9G,EAA4H;AAAA;;AACxH,aAAK2J,GAAL,GAAWvQ,EAAX;AACA,aAAKwQ,wBAAL,GAAgCJ,uBAAhC;AACA,aAAKK,kBAAL,GAA0BJ,iBAA1B;AACA,aAAKK,iBAAL,GAAyBJ,gBAAzB;AACA,aAAKK,KAAL,GAAa/J,IAAb;AACH;;;;4BAE0B;AACvB,iBAAO,KAAK4J,wBAAZ;AACH,S;0BAE2B5N,K,EAAe;AACvC,eAAK4N,wBAAL,GAAgC5N,KAAhC;AACH;;;4BAEoB;AACjB,iBAAO,KAAK6N,kBAAZ;AACH,S;0BAEqB7N,K,EAAe;AACjC,eAAK6N,kBAAL,GAA0B7N,KAA1B;AACH;;;4BAEmB;AAChB,iBAAO,KAAK8N,iBAAZ;AACH,S;0BAEoB9N,K,EAAe;AAChC,eAAK8N,iBAAL,GAAyB9N,KAAzB;AACH;;;4BAGK;AACF,iBAAO,KAAK2N,GAAZ;AACH,S;0BAEM3N,K,EAAe;AAClB,eAAK2N,GAAL,GAAW3N,KAAX;AACH;;;4BAEO;AACJ,iBAAO,KAAK+N,KAAZ;AACH,S;0BAEQ/N,K,EAAe;AACpB,eAAK+N,KAAL,GAAa/N,KAAb;AACH;;;;;;;;;;;;;;;;;;;;;ACtDL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGagO,M;;;;;;;AAQT,sBAAY7B,KAAZ,EAAuC9H,CAAvC,EAAkDC,CAAlD,EAA6D2J,OAA7D,EAA8EhM,KAA9E,EAA6F;AAAA;;AAAA;;AACzF,oCAAMkK,KAAN,EAAa9H,CAAb,EAAgBC,CAAhB,EAAmB2J,OAAnB,EADyF,CAGzF;;AACA9B,aAAK,CAACU,GAAN,CAAUqB,QAAV,iCAJyF,CAMzF;;AACA/B,aAAK,CAACE,OAAN,CAAcQ,GAAd,CAAkBqB,QAAlB,iCAPyF,CASzF;;AACA/B,aAAK,CAACE,OAAN,CAAcQ,GAAd,CAAkBsB,QAAlB,iCAAiChC,KAAK,CAACiC,eAAvC,EAVyF,CAYzF;;AAEA,eAAKC,MAAL,GAAcpM,KAAd;AAdyF;AAe5F;;;;4BAEQ;AACL,iBAAO,KAAKoM,MAAZ;AACH,S;0BAESrO,K,EAAe;AACrB,eAAKqO,MAAL,GAAcrO,KAAd;AACH;;;4BAEY;AACT,iBAAO,KAAKsO,UAAZ;AACH,S;0BAEatO,K,EAAe;AACzB,eAAKsO,UAAL,GAAkBtO,KAAlB;AACH;;;4BAEY;AACT,iBAAO,KAAKuO,UAAZ;AACH,S;0BAEavO,K,EAAe;AACzB,eAAKuO,UAAL,GAAkBvO,KAAlB;AACH;;;4BAEU;AACP,iBAAO,KAAKwO,QAAZ;AACH,S;0BAEWxO,K,EAAe;AACvB,eAAKwO,QAAL,GAAgBxO,KAAhB;AACH;;;;MAvDuB,8CAAOyO,OAAP,CAAeC,MAAf,CAAsBC,M;;AAMhC,WAAAC,KAAA,GAAQ,GAAR;;;;;;;;;;;;;;;;ACTlB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,O;;;AAKT,uBAAYzR,EAAZ,EAAwBiH,CAAxB,EAAmCC,CAAnC,EAA8C;AAAA;;AAC1C,aAAKqJ,GAAL,GAAWvQ,EAAX;AACA,aAAK0R,EAAL,GAAUzK,CAAV;AACA,aAAK0K,EAAL,GAAUzK,CAAV;AACH;;;;4BAGK;AACF,iBAAO,KAAKqJ,GAAZ;AACH,S;0BAEM3N,K,EAAe;AAClB,eAAK2N,GAAL,GAAW3N,KAAX;AACH;;;4BAEI;AACD,iBAAO,KAAK8O,EAAZ;AACH,S;0BAEK9O,K,EAAe;AACjB,eAAK8O,EAAL,GAAU9O,KAAV;AACH;;;4BAEI;AACD,iBAAO,KAAK+O,EAAZ;AACH,S;0BAEK/O,K,EAAe;AACjB,eAAK+O,EAAL,GAAU/O,KAAV;AACH;;;;;;;;;;;;;;;;;;;;;AClCL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuCagP,kB;;;;;;;AA0DT,kCACYC,gBADZ,EAEYjC,MAFZ,EAGYkC,QAHZ,EAIYC,eAJZ,EAKYvI,YALZ,EAK6C;AAAA;;AAAA;;AAEzC,oCAAM;AAAC+D,aAAG,EAAE;AAAN,SAAN;AANQ,eAAAsE,gBAAA,GAAAA,gBAAA;AACA,eAAAjC,MAAA,GAAAA,MAAA;AACA,eAAAkC,QAAA,GAAAA,QAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAvI,YAAA,GAAAA,YAAA,CAAiC,CA9D7C;;AACQ,eAAAwI,cAAA,GAAiB,OAAKC,YAAL,CAAkB,EAAlB,EAAsB,gEAAtB,CAAjB;AACA,eAAAC,uBAAA,GAAmD,IAAIzL,KAAJ,CAA4B,EAA5B,CAAnD,CA4DqC,CA3B7C;;AACQ,eAAA0L,OAAA,GAA4B,IAAIC,GAAJ,EAA5B;AACA,eAAAC,QAAA,GAAmD,IAAID,GAAJ,EAAnD;AACA,eAAAE,IAAA,GAAO,IAAI7L,KAAJ,EAAP,CAwBqC,CArB7C;;AACQ,eAAA8L,0BAAA,GAA6B,KAA7B;AAMA,eAAAC,cAAA,GAAyB,CAAzB;AAIA,eAAAC,YAAA,GAAiC,IAAIL,GAAJ,EAAjC;;AAcJ,YAAI,OAAKxC,MAAL,CAAYC,oBAAZ,GAAmCC,MAAnC,CAA0CxH,KAA9C,EAAqD;AACjD,iBAAKoK,YAAL,GAAoB,OAAK9C,MAAL,CAAYC,oBAAZ,GAAmCC,MAAnC,CAA0CxH,KAA1C,CAAgD0H,IAApE;AACA,iBAAK6B,gBAAL,CAAsBzG,UAAtB,GAAmC,OAAKsH,YAAxC;AACH,SAHD,MAGO;AACH,iBAAK9C,MAAL,CAAYK,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACH;;AATwC;AAU5C;;;;oCAEW;AAAA;;AACR,eAAK4B,gBAAL,CAAsBc,oBAAtB,GADQ,CAER;AACA;;AACA,eAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsF,uBAAL,CAA6B3N,MAAjD,EAAyDqI,CAAC,EAA1D,EAA8D;AAC1D,iBAAKsF,uBAAL,CAA6BtF,CAA7B,IAAkC,IAAI,gGAAJ,CAAqB,IAArB,EAA2B,KAAKoF,cAAhC,CAAlC;AACH,WANO,CAOR;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAKY,iBAAL,GAAyB,KAAKf,gBAAL,CAAsBgB,QAAtB,GAAiCrI,SAAjC,CAA2C,UAAAlC,KAAK,EAAI;AACzE,gBAAIA,KAAK,KAAK,mFAAkBwD,SAAhC,EAA2C;AACvC,oBAAI,CAACgH,wBAAL,GAAgC,MAAI,CAACjB,gBAAL,CAAsBkB,aAAtB,GAAsCvI,SAAtC,CAAgD,UAACmB,mBAAD,EAAyB;AACrG,oBAAIA,mBAAmB,CAACpH,MAApB,GAA6B,CAAjC,EAAoC;AAAA,6DACLoH,mBADK;AAAA;;AAAA;AAChC,wEAAgD;AAAA,0BAArCF,YAAqC;;AAC5C,4BAAI,CAACuH,KAAL,CAAWC,MAAX,CAAmBxH,YAAY,CAAC1J,SAAb,GAAyB,EAA1B,GAAgC,EAAlD,EAAuD0J,YAAY,CAACxJ,SAAb,GAAyB,EAA1B,GAAgC,EAAtF,EAA0F,MAA1F,EAAkG,IAAlG,EAAwG,IAAxG,EAA8G,IAA9G;AACH;AAH+B;AAAA;AAAA;AAAA;AAAA;;AAIhC,wBAAI,CAAC4P,gBAAL,CAAsBqB,SAAtB,CAAgC,MAAI,CAACR,YAArC;AACH,iBALD,MAKO,IAAI/G,mBAAmB,CAACpH,MAApB,KAA+B,CAAnC,EAAsC;AACzC4O,0BAAQ,CAACC,oBAAT,CAA8B,QAA9B,EAAwCC,IAAxC,CAA6C,CAA7C,EAAgDC,MAAhD;;AACA,wBAAI,CAAC1D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAAC3H,yBAAK,EAAE;AAAC0H,0BAAI,EAAE,MAAI,CAAC0C;AAAZ;AAAR,mBAA/B;;AACAlL,yBAAO,CAACC,KAAR,CAAc,4CAAd;AACH;AACJ,eAX+B,CAAhC;;AAYA,oBAAI,CAACoK,gBAAL,CAAsB0B,UAAtB,CAAiC,MAAI,CAACb,YAAtC;;AACAlL,qBAAO,CAACC,KAAR,CAAc,wDAAd;AACH,aAfD,MAeO,IAAIa,KAAK,KAAK,mFAAkBkL,KAAhC,EAAuC;AAC1ChM,qBAAO,CAACC,KAAR,CAAc,sCAAd;;AACA,oBAAI,CAACgM,sBAAL;AACH,aAHM,MAGA;AACHjM,qBAAO,CAACC,KAAR,CAAc,8BAAd;AACH;AACJ,WAtBwB,CAAzB;AAuBH;;;iCAEQ;AAAA;;AACL,eAAKyI,SAAL;AAEA,cAAMwD,UAAU,GAAG,sDAAS,IAAT,CAAnB;AACA,eAAKC,sBAAL,GAA8BD,UAAU,CAAClJ,SAAX,CAAqB,YAAM;AACrD,kBAAI,CAACoJ,YAAL;AACH,WAF6B,CAA9B,CAJK,CAQL;;AACA,eAAKC,qBAAL,GAA6B,KAAKhC,gBAAL,CAAsBiC,YAAtB,GAAqCtJ,SAArC,CAA+C,UAACuJ,aAAD,EAAmB,CAC9F,CAD4B,CAA7B;AAGA,eAAKC,uBAAL,GAA+B,KAAKnC,gBAAL,CAAsBoC,cAAtB,GAAuCzJ,SAAvC,CAAiD,UAAC0J,OAAD,EAAa;AACzF,kBAAI,CAAC/B,OAAL,CAAagC,GAAb,CAAiB,MAAI,CAACzB,YAAtB,EAAoC7N,KAApC,GAA4CqP,OAA5C;;AACA,kBAAI,CAACE,SAAL,CAAeC,OAAf,CAAuB,MAAI,CAAC3B,YAAL,GAAoB,UAApB,GAAiCwB,OAAxD;AACH,WAH8B,CAA/B,CAZK,CAiBL;;AACA,eAAKI,wBAAL,GAAgC,KAAKzC,gBAAL,CAAsB0C,eAAtB,GAAwC/J,SAAxC,CAAkD,YAAM;AACpF,kBAAI,CAACgK,SAAL,CAAeC,OAAf,CAAuB,UAAA7Q,MAAM,EAAI;AAC7B,kBAAI9B,GAAG,GAAG,MAAI,CAACkR,KAAL,CAAWC,MAAX,CAAkBrP,MAAM,CAACqD,CAAP,GAAW,EAA7B,EAAiCrD,MAAM,CAACsD,CAAP,GAAW,EAA5C,EAAgD,MAAhD,CAAV;;AACApF,iBAAG,CAAC4S,QAAJ,CAAa9Q,MAAM,CAAC4K,KAAP,GAAe,EAA5B,EAAgC5K,MAAM,CAAC2K,MAAP,GAAgB,EAAhD;AACAzM,iBAAG,CAACiH,IAAJ,CAASyF,KAAT,GAAiB5K,MAAM,CAAC4K,KAAxB;AACA1M,iBAAG,CAACiH,IAAJ,CAASwF,MAAT,GAAkB3K,MAAM,CAAC2K,MAAzB;AACH,aALD;AAMH,WAP+B,CAAhC;AASA,eAAKoG,mBAAL;AACA,eAAKC,oBAAL;AAEApN,iBAAO,CAACC,KAAR,CAAc,cAAd;AACA,eAAKoN,IAAL,CAAUC,IAAV,CAAeC,SAAf,GAA2B,EAA3B;AACA,eAAK9F,OAAL,CAAa+F,KAAb,CAAmBC,MAAnB,CAA0B,EAA1B;AACAzN,iBAAO,CAACC,KAAR,CAAc,+DAAd;AACAD,iBAAO,CAACC,KAAR,CAAc,iBAAiB,KAAKoN,IAAL,CAAUC,IAAV,CAAeI,SAA9C;AACA1N,iBAAO,CAACC,KAAR,CAAc,uBAAuB,KAAKwH,OAAL,CAAa+F,KAAb,CAAmB5F,GAAxD;AACA5H,iBAAO,CAACC,KAAR,CAAc,+CAAd;AAEA,eAAK0N,2BAAL,CAAiC,WAAjC,EAA8C,QAA9C;AACA,eAAKA,2BAAL,CAAiC,cAAjC,EAAiD,WAAjD;AACA,eAAKC,KAAL,CAAWnC,MAAX,CAAkB;AACd1F,eAAG,EAAE,WADS;AAEd8H,kBAAM,EAAE,KAAKD,KAAL,CAAWE,oBAAX,CAAgC,SAAhC,EAA2C;AAACD,oBAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAT,aAA3C,CAFM;AAGdE,qBAAS,EAAE,CAHG;AAIdC,kBAAM,EAAE,CAAC;AAJK,WAAlB;AAOA,eAAKC,KAAL,GAAa,KAAKhG,GAAL,CAASiG,OAAT,CAAiB,OAAjB,CAAb;AAEA,eAAKC,aAAL,GAAqB,KAAKF,KAAL,CAAWG,eAAX,CAA2B,iBAA3B,CAArB;AACA,eAAKC,IAAL,GAAY,KAAKJ,KAAL,CAAWG,eAAX,CAA2B,MAA3B,CAAZ;AAEA,eAAKE,SAAL,GAAiB,KAAKL,KAAL,CAAWM,kBAAX,CAA8B,MAA9B,EAAsC,CAAC,KAAKJ,aAAN,CAAtC,EAA4D,CAA5D,EAA+D,CAA/D,CAAjB;AACA,eAAKK,gBAAL,GAAwB,KAAKP,KAAL,CAAWM,kBAAX,CAA8B,iBAA9B,EAAiD,CAAC,KAAKJ,aAAN,CAAjD,EAAuE,CAAvE,EAA0E,CAA1E,CAAxB;AACA,eAAKnB,SAAL,GAAiB,KAAKiB,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,EAAyC,SAAzC,CAAjB;AAEA,eAAKC,UAAL,GAAkB,KAAKzG,GAAL,CAAS0G,KAAT,CAAe,KAAKtB,IAAL,CAAUuB,MAAV,CAAiB5H,KAAjB,GAAyB,EAAxC,EAA4C,EAA5C,EAAgD,aAAhD,CAAlB;AACA,eAAK0H,UAAL,CAAgBG,cAAhB;AACA,eAAKH,UAAL,CAAgBI,EAAhB,CAAmB,WAAnB,EAAgC,YAAM;AAClC,kBAAI,CAACC,WAAL;AACH,WAFD;AAIA,eAAKC,cAAL,GAAsB,KAAK/G,GAAL,CAAS0G,KAAT,CAAe,KAAKtB,IAAL,CAAUuB,MAAV,CAAiB5H,KAAjB,GAAyB,GAAxC,EAA6C,EAA7C,EAAiD,iBAAjD,CAAtB;AACA,eAAKgI,cAAL,CAAoBH,cAApB;AACA,eAAKG,cAAL,CAAoBF,EAApB,CAAuB,WAAvB,EAAoC,YAAM;AACtC;AACA,kBAAI,CAACvE,eAAL,CAAqB0E,4BAArB;AACH,WAHD,EAhEK,CAqEL;;AACA,eAAKT,gBAAL,CAAsBU,mBAAtB,CAA0C,GAA1C,EAA+C,GAA/C;;AAEA,eAAKC,UAAL,GAAkB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,gBAApB,EAAlB;AAEA,eAAK9D,KAAL,GAAa,KAAK/D,OAAL,CAAaQ,GAAb,CAAiBsH,KAAjB,EAAb;AAEA,eAAKC,YAAL,GAAoB,KAAKvH,GAAL,CAASpG,IAAT,CAAc,GAAd,EAAmB,EAAnB,EAAuB,GAAvB,EAA4B;AAC5C4N,gBAAI,EAAE,YADsC;AAE5CC,gBAAI,EAAE,SAFsC;AAG5CC,iBAAK,EAAE;AAHqC,WAA5B,CAApB;AAKA,eAAKC,YAAL,GAAoB,KAAK3H,GAAL,CAASpG,IAAT,CAAc,IAAd,EAAoB,EAApB,EAAwB,GAAxB,EAA6B;AAC7C4N,gBAAI,EAAE,YADuC;AAE7CC,gBAAI,EAAE,SAFuC;AAG7CC,iBAAK,EAAE;AAHsC,WAA7B,CAApB;AAKA,eAAKE,YAAL,GAAoB,KAAK5H,GAAL,CAASpG,IAAT,CAAc,GAAd,EAAmB,EAAnB,EAAuB,GAAvB,EAA4B;AAC5C4N,gBAAI,EAAE,YADsC;AAE5CC,gBAAI,EAAE,SAFsC;AAG5CC,iBAAK,EAAE;AAHqC,WAA5B,CAApB;;AAMA,eAAKnE,KAAL,CAAWsE,cAAX,GAA4B,YAAY,CACvC,CADD;;AAIA9P,iBAAO,CAACC,KAAR,CAAc,iBAAd;AACH;;;kCAES;AACN,eAAK8P,IAAL,CAAUpB,KAAV,CAAgB,iBAAhB,EAAmC,sCAAnC;AACA,eAAKoB,IAAL,CAAUpB,KAAV,CAAgB,MAAhB,EAAwB,6BAAxB;AAEA,eAAKoB,IAAL,CAAUpB,KAAV,CAAgB,aAAhB,EAA+B,oCAA/B;AACA,eAAKoB,IAAL,CAAUpB,KAAV,CAAgB,iBAAhB,EAAmC,wCAAnC;AAEA,eAAKoB,IAAL,CAAUC,WAAV,CAAsB,WAAtB,EAAmC,kCAAnC,EAAuE;AAACC,sBAAU,EAAE,EAAb;AAAiBC,uBAAW,EAAE;AAA9B,WAAvE;AACA,eAAKH,IAAL,CAAUC,WAAV,CAAsB,cAAtB,EAAsC,+BAAtC,EAAuE;AAACC,sBAAU,EAAE,EAAb;AAAiBC,uBAAW,EAAE;AAA9B,WAAvE;AACA,eAAKH,IAAL,CAAUC,WAAV,CAAsB,SAAtB,EAAiC,gCAAjC,EAAmE;AAACC,sBAAU,EAAE,EAAb;AAAiBC,uBAAW,EAAE;AAA9B,WAAnE;AAEA,eAAKH,IAAL,CAAUI,gBAAV,CAA2B,OAA3B,EAAoC,4BAApC;AACH;;;iCAEQ;AACL;AACA,cAAI,KAAKpF,0BAAT,EAAqC;AACjC,iBAAKqF,iBAAL;AACH;AACJ;;;oCAEWC,M,EAAgBhC,I,EAAM;AAC9BA,cAAI,CAACiC,OAAL,CAAajC,IAAI,CAAC5O,CAAlB,EAAqB4O,IAAI,CAAC3O,CAA1B;AACA,iBAAO,KAAP;AACH;;;8CAEqB;AAAA;;AAClB,eAAK6Q,wBAAL,GAAgC,KAAKlG,gBAAL,CAAsBmG,eAAtB,GAAwCxN,SAAxC,CAAkD,UAAC1C,YAAD,EAAiC;AAC/GA,wBAAY,CAACmQ,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,qBAAOA,CAAC,CAACtT,KAAF,GAAUqT,CAAC,CAACrT,KAAnB;AACH,aAFD;AAIA,kBAAI,CAACyN,IAAL,CAAU/N,MAAV,GAAmB,CAAnB;;AACA,kBAAI,CAACyS,YAAL,CAAkB3C,OAAlB,CAA0B,QAA1B;;AACA,kBAAI,CAAC+C,YAAL,CAAkB/C,OAAlB,CAA0B,QAA1B;;AACA,kBAAI,CAACgD,YAAL,CAAkBhD,OAAlB,CAA0B,QAA1B;;AACA,gBAAI+D,OAAO,GAAG,CAAd;;AAT+G,wDAU1FtQ,YAV0F;AAAA;;AAAA;AAU/G,qEAAmC;AAAA,oBAAxB+P,MAAwB;AAC/BO,uBAAO;;AACP,oBAAIA,OAAO,GAAG,CAAd,EAAiB;AACb,wBAAI,CAAC9F,IAAL,CAAU8F,OAAO,GAAG,CAApB,IAAyBP,MAAzB;;AACA,wBAAI,CAACQ,YAAL,CAAkBD,OAAlB,EAA2BP,MAA3B;AACH;;AAED,oBAAI,CAAC,MAAI,CAAC1F,OAAL,CAAamG,GAAb,CAAiBT,MAAM,CAACjT,QAAxB,CAAL,EAAwC;AACpC,sBAAIiT,MAAM,CAACjT,QAAP,KAAoB,MAAI,CAAC8N,YAA7B,EAA2C;AACvC,0BAAI,CAACP,OAAL,CAAaoG,GAAb,CAAiBV,MAAM,CAACjT,QAAxB,EAAkC,IAAI,oDAAJ,CAAW,MAAX,EAAiBiT,MAAM,CAAC9V,SAAxB,EAAmC8V,MAAM,CAAC5V,SAA1C,EAAqD,cAArD,EAAqE4V,MAAM,CAAChT,KAA5E,CAAlC;;AACA2C,2BAAO,CAACC,KAAR,CAAc,mBAAmBoQ,MAAM,CAACjT,QAAxC;;AACA,0BAAI,CAACuN,OAAL,CAAagC,GAAb,CAAiB0D,MAAM,CAACjT,QAAxB,EAAkCwQ,KAAlC,CAAwCoD,IAAxC,CAA6C,WAA7C;AACH,mBAJD,MAIO;AACH,0BAAI,CAACrG,OAAL,CAAaoG,GAAb,CAAiBV,MAAM,CAACjT,QAAxB,EAAkC,IAAI,oDAAJ,CAAW,MAAX,EAAiBiT,MAAM,CAAC9V,SAAxB,EAAmC8V,MAAM,CAAC5V,SAA1C,EAAqD,WAArD,EAAkE4V,MAAM,CAAChT,KAAzE,CAAlC;;AACA,0BAAI,CAAC0N,0BAAL,GAAkC,IAAlC;AACA,0BAAI,CAAC6B,SAAL,GAAiB,MAAI,CAAC3E,GAAL,CAASpG,IAAT,CAAc,EAAd,EAAkB,EAAlB,EAAsB,MAAI,CAACqJ,YAAL,GAAoB,UAApB,GAAiCmF,MAAM,CAAChT,KAA9D,EAAqE;AAClFoS,0BAAI,EAAE,YAD4E;AAElFC,0BAAI,EAAE,SAF4E;AAGlFC,2BAAK,EAAE;AAH2E,qBAArE,CAAjB,CAHG,CASH;;AACA,0BAAI,CAAChF,OAAL,CAAagC,GAAb,CAAiB0D,MAAM,CAACjT,QAAxB,EAAkCwQ,KAAlC,CAAwCoD,IAAxC,CAA6C,QAA7C;;AACA,0BAAI,CAAChP,YAAL,CAAkBjC,kBAAlB,GAAuC,IAAI,sDAAJ,CAAY,CAAZ,EAAesQ,MAAM,CAAC9V,SAAtB,EAAiC8V,MAAM,CAAC5V,SAAxC,CAAvC;;AACA,0BAAI,CAACwW,kBAAL;AACH;;AACD,wBAAI,CAACxJ,OAAL,CAAaQ,GAAb,CAAiBiJ,OAAjB,CAAyB,MAAI,CAACvG,OAAL,CAAagC,GAAb,CAAiB0D,MAAM,CAACjT,QAAxB,CAAzB,EAA4D,MAAI,CAACoO,KAAjE,EAAwE,MAAI,CAAC2F,WAA7E,EAA0F,IAA1F,EAAgG,MAAhG;AACH;AACJ;AAtC8G;AAAA;AAAA;AAAA;AAAA;AAuClH,WAvC+B,CAAhC;AAyCA,eAAKC,0BAAL,GAAkC,KAAK/G,gBAAL,CAAsBgH,iBAAtB,GAA0CrO,SAA1C,CAAoD,UAACzC,cAAD,EAA4B;AAC9G,kBAAI,CAACuK,IAAL,GAAY,MAAI,CAACA,IAAL,CAAUwG,MAAV,CAAiB,UAAAzF,IAAI;AAAA,qBAAIA,IAAI,CAACzO,QAAL,KAAkBmD,cAAc,CAACnD,QAArC;AAAA,aAArB,CAAZ;AACA4C,mBAAO,CAACC,KAAR,CAAc,yBAAd;;AACA,gBAAIM,cAAc,CAACnD,QAAf,KAA4B,MAAI,CAAC8N,YAArC,EAAmD;AAC/C,oBAAI,CAACe,sBAAL;AACH;;AACD,kBAAI,CAACtB,OAAL,CAAagC,GAAb,CAAiBpM,cAAc,CAACnD,QAAhC,EAA0CkT,OAA1C,CAAkD,IAAlD;;AACA,kBAAI,CAAC3F,OAAL,WAAoBpK,cAAc,CAACnD,QAAnC;AACH,WARiC,CAAlC;AAUA,eAAKmU,0BAAL,GAAkC,KAAKlH,gBAAL,CAAsBmH,iBAAtB,GAA0CxO,SAA1C,CAAoD,UAACqN,MAAD,EAAY;AAC9F,gBAAIoB,aAAa,GAAW,MAAI,CAAC9G,OAAL,CAAagC,GAAb,CAAiB0D,MAAM,CAACjT,QAAxB,CAA5B;;AAEA,gBAAIqU,aAAJ,EAAmB;AACf,oBAAI,CAACC,mCAAL,CAAyCrB,MAAzC,EAAiDoB,aAAjD;;AAEAA,2BAAa,CAAChS,CAAd,GAAkB4Q,MAAM,CAAC9V,SAAzB;AACAkX,2BAAa,CAAC/R,CAAd,GAAkB2Q,MAAM,CAAC5V,SAAzB;AACAgX,2BAAa,CAACpU,KAAd,GAAsBgT,MAAM,CAAChT,KAA7B;AACA2C,qBAAO,CAACC,KAAR,CAAc,gBAAd;AACH;AACJ,WAXiC,CAAlC;AAYH,S,CAED;;;;6CACqB;AAAA;;AACjB,cAAMoQ,MAAM,GAAG,KAAK1F,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,CAAf,CADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAKyG,KAAL,GAAatB,MAAM,CAAC5Q,CAApB;AACA,eAAKmS,KAAL,GAAavB,MAAM,CAAC3Q,CAApB;AACA,eAAKmS,SAAL,GAAiBxB,MAAM,CAACyB,KAAxB;AAEA,cAAMC,YAAY,GAAG,sDAAS,IAAT,CAArB;AACA,cAAMC,wBAAwB,GAAGD,YAAY,CAAC/O,SAAb,CAAuB,YAAK;AACzD,iBAAI,IAAIoC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,oBAAI,CAACsF,uBAAL,CAA6BrL,IAA7B,CAAkC,IAAI,gGAAJ,CAAqB,IAArB,EAA0B,MAAI,CAACmL,cAA/B,CAAlC;AACH;;AACD,gBAAG,MAAI,CAACE,uBAAL,CAA6B3N,MAA7B,GAAsC,GAAzC,EAA8C;AAC1CiV,sCAAwB,CAACC,WAAzB;AACH;AACJ,WAPgC,CAAjC;AASA,eAAKC,cAAL,GAAsB,sDAAS,EAAT,CAAtB;AACA,eAAKC,0BAAL,GAAkC,KAAKD,cAAL,CAAoBlP,SAApB,CAA8B,YAAM;AAClE,gBAAMqN,MAAM,GAAW,MAAI,CAAC1F,OAAL,CAAagC,GAAb,CAAiB,MAAI,CAACzB,YAAtB,CAAvB;;AACA,gBAAK,MAAI,CAACyG,KAAL,KAAetB,MAAM,CAAC5Q,CAAvB,IACC,MAAI,CAACmS,KAAL,KAAevB,MAAM,CAAC3Q,CADvB,IAEC,MAAI,CAACmS,SAAL,KAAmBxB,MAAM,CAACyB,KAF/B,EAEuC;AAEnC,oBAAI,CAACH,KAAL,GAAatB,MAAM,CAAC5Q,CAApB;AACA,oBAAI,CAACmS,KAAL,GAAavB,MAAM,CAAC3Q,CAApB;AACA,oBAAI,CAACmS,SAAL,GAAiBxB,MAAM,CAACyB,KAAxB;;AAEA,oBAAI,CAAC9P,YAAL,CAAkBoQ,UAAlB,CAA6B,EAAE,MAAI,CAACpH,cAApC,EAAoDqF,MAAM,CAAC5Q,CAA3D,EAA8D4Q,MAAM,CAAC3Q,CAArE;;AAEA,oBAAI,CAAC2K,gBAAL,CAAsBgI,YAAtB,CAAmC;AAC/B,4BAAY,MAAI,CAACnH,YADc;AAE/B,6BAAamF,MAAM,CAAC5Q,CAFW;AAG/B,6BAAa4Q,MAAM,CAAC3Q,CAHW;AAI/B,yBAAS2Q,MAAM,CAAChT,KAJe;AAK/B,iCAAiB,MAAI,CAACiV,YAAL,EALc;AAM/B,2BAAW,MAAI,CAACtH,cANe;AAO/B,oCAAoB,IAAI1H,IAAJ,GAAWC,OAAX,EAPW;AAQ/B,kCAAkB,MAAI,CAACmH;AARQ,eAAnC;AAUH;AACJ,WAvBiC,CAAlC;AAwBH;;;+CAEsB6H,Q,EAAUC,M,EAAQC,K,EAAO;AAC5C,cAAIC,gBAAgB,GAAG,UAAUC,IAAV,EAAgB/B,OAAhB,EAAyB;AAC5C,mBAAO,YAAY;AACf,kBAAI,EAAE+B,IAAF,IAAU,CAAd,EAAiB;AACbC,sBAAM,CAACC,UAAP,CAAkBH,gBAAlB,EAAoC,CAAC,QAAS,EAAE9B,OAAF,GAAY4B,MAAtB,IAAiC,IAArE;AACAD,wBAAQ;AACX;AACJ,aALD;AAMH,WAPsB,CAOrBE,KAPqB,EAOd,CAPc,CAAvB;;AASAG,gBAAM,CAACC,UAAP,CAAkBH,gBAAlB,EAAoCF,MAApC;AACH;;;qCAEYzV,M,EAAQ+V,K,EAAO;AACxB,cAAI7N,MAAM,GAAG,EAAb;;AACA,eAAK,IAAIG,CAAC,GAAGrI,MAAb,EAAqBqI,CAAC,GAAG,CAAzB,EAA4B,EAAEA,CAA9B,EAAiC;AAC7BH,kBAAM,IAAI6N,KAAK,CAACxN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBsN,KAAK,CAAC/V,MAAjC,CAAD,CAAf;AACH;;AACD,iBAAOkI,MAAP;AACH;;;qCAEYrD,M,EAAQyO,M,EAAQ;AACzB,kBAAQzO,MAAR;AACI,iBAAK,CAAL;AAAQ;AACJ,qBAAK4N,YAAL,CAAkB3C,OAAlB,CAA0BwD,MAAM,CAACjT,QAAP,GAAkB,UAAlB,GAA+BiT,MAAM,CAAChT,KAAhE;AACA,qBAAK4N,YAAL,CAAkB8F,GAAlB,CAAsBV,MAAM,CAACjT,QAA7B,EAAuC,KAAKoS,YAA5C;AACA,qBAAKI,YAAL,CAAkB/C,OAAlB,CAA0B,GAA1B;AACA,qBAAKgD,YAAL,CAAkBhD,OAAlB,CAA0B,GAA1B;AACA;AACH;;AACD,iBAAK,CAAL;AAAQ;AACJ,qBAAK+C,YAAL,CAAkB/C,OAAlB,CAA0BwD,MAAM,CAACjT,QAAP,GAAkB,UAAlB,GAA+BiT,MAAM,CAAChT,KAAhE;AACA,qBAAK4N,YAAL,CAAkB8F,GAAlB,CAAsBV,MAAM,CAACjT,QAA7B,EAAuC,KAAKwS,YAA5C;AACA,qBAAKC,YAAL,CAAkBhD,OAAlB,CAA0B,GAA1B;AACA;AACH;;AACD,iBAAK,CAAL;AAAQ;AACJ,qBAAKgD,YAAL,CAAkBhD,OAAlB,CAA0BwD,MAAM,CAACjT,QAAP,GAAkB,UAAlB,GAA+BiT,MAAM,CAAChT,KAAhE;AACA,qBAAK4N,YAAL,CAAkB8F,GAAlB,CAAsBV,MAAM,CAACjT,QAA7B,EAAuC,KAAKyS,YAA5C;AACA;AACH;AAlBL;AAoBH;;;uCAEc;AAAA;;AACX,cAAIkD,YAAY,GAAG,IAAI9T,KAAJ,EAAnB;AACA,eAAK0L,OAAL,CAAasC,OAAb,CAAqB,UAAC7R,KAAD,EAAgB2K,GAAhB,EAAgC;AACjD3K,iBAAK,CAACgC,QAAN,GAAiB2I,GAAjB;AACAgN,wBAAY,CAAC1T,IAAb,CAAkBjE,KAAlB;AACH,WAHD;AAKA2X,sBAAY,GAAGA,YAAY,CAACtC,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUA,CAAC,CAACtT,KAAF,GAAUqT,CAAC,CAACrT,KAAtB;AAAA,WAAlB,CAAf;AAEA,cAAIuT,OAAO,GAAG,CAAd;AACAmC,sBAAY,CAAC9F,OAAb,CAAqB,UAAA+F,OAAO,EAAI;AAC5B,kBAAI,CAACnC,YAAL,CAAkBD,OAAlB,EAA2BoC,OAA3B;;AACApC,mBAAO;;AACP,gBAAIA,OAAO,GAAG,CAAd,EAAiB;AACb;AACH;AACJ,WAND;AAOH;;;4CAEmB;AAChB,cAAI,KAAKzB,UAAL,CAAgB8D,IAAhB,CAAqBC,MAArB,KAAgC,IAApC,EAA0C;AACtC,iBAAKvI,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCiI,WAApC,CAAgD,CAAC,qDAAOnJ,KAAxD,EAA+D,CAA/D;AACA,iBAAKW,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCkI,QAApC,CAA6C,GAA7C;AACH,WAHD,MAGO,IAAI,KAAKjE,UAAL,CAAgBkE,KAAhB,CAAsBH,MAAtB,KAAiC,IAArC,EAA2C;AAC9C,iBAAKvI,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCiI,WAApC,CAAgD,qDAAOnJ,KAAvD,EAA8D,CAA9D;AACA,iBAAKW,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCkI,QAApC,CAA6C,EAA7C;AACH,WAHM,MAGA,IAAI,KAAKjE,UAAL,CAAgBmE,EAAhB,CAAmBJ,MAAnB,KAA8B,IAAlC,EAAwC;AAC3C,iBAAKvI,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCiI,WAApC,CAAgD,CAAhD,EAAmD,CAAC,qDAAOnJ,KAA3D;AACA,iBAAKW,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCkI,QAApC,CAA6C,CAA7C;AACH,WAHM,MAGA,IAAI,KAAKjE,UAAL,CAAgBoE,IAAhB,CAAqBL,MAArB,KAAgC,IAApC,EAA0C;AAC7C,iBAAKvI,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCiI,WAApC,CAAgD,CAAhD,EAAmD,qDAAOnJ,KAA1D;AACA,iBAAKW,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoCkI,QAApC,CAA6C,GAA7C;AACH;AACJ;;;+CAEsB;AAAA;;AACnB,eAAKI,2BAAL,GAAmC,KAAKnJ,gBAAL,CAAsBoJ,kBAAtB,GAA2CzQ,SAA3C,CAAqD,UAACvC,eAAD,EAAqB;AACzG,gBAAI,OAAI,CAACoK,QAAL,CAAciG,GAAd,CAAkBrQ,eAAe,CAACjI,EAAlC,CAAJ,EAA2C;AACvC,qBAAI,CAACqS,QAAL,CAAc8B,GAAd,CAAkBlM,eAAe,CAACjI,EAAlC,EAAsCiH,CAAtC,GAA0CgB,eAAe,CAAClG,SAA1D;AACA,qBAAI,CAACsQ,QAAL,CAAc8B,GAAd,CAAkBlM,eAAe,CAACjI,EAAlC,EAAsCkH,CAAtC,GAA0Ce,eAAe,CAAChG,SAA1D;AACH,aAHD,MAGO;AACH,qBAAI,CAACoQ,QAAL,CAAckG,GAAd,CAAkBtQ,eAAe,CAACjI,EAAlC,EAAsC,OAAI,CAACiP,OAAL,CAAaQ,GAAb,CAAiByL,MAAjB,CAAwBjT,eAAe,CAAClG,SAAxC,EAAmDkG,eAAe,CAAChG,SAAnE,EAA8E,SAA9E,CAAtC;;AACA,qBAAI,CAACoQ,QAAL,CAAc8B,GAAd,CAAkBlM,eAAe,CAACjI,EAAlC,EAAsCoV,KAAtC,CAA4CoD,IAA5C,CAAiD,WAAjD;AACH;AACJ,WARkC,CAAnC;AASH,S,CAEL;;;;sCAEkB;AACV,eAAK/E,sBAAL;AACH;;;iDAEwB;AACrB,eAAKlB,0BAAL,GAAkC,KAAlC;AACA,eAAKG,YAAL,GAAoB,EAApB;AACA,eAAK9C,MAAL,CAAYK,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACH;;;sCAEa;AACV,cAAI,KAAK6C,wBAAL,IAAiC,KAAKF,iBAAtC,IACA,KAAKmF,wBADL,IACiC,KAAKa,0BADtC,IAEA,KAAKG,0BAFL,IAEmC,KAAKiC,2BAFxC,IAGA,KAAKrB,0BAHL,IAGmC,KAAK9F,qBAHxC,IAIA,KAAKG,uBAJL,IAIgC,KAAKM,wBAJrC,IAKA,KAAKX,sBALT,EAME;AACEnM,mBAAO,CAACC,KAAR,CAAc,WAAd;AACA,iBAAK+K,cAAL,GAAsB,CAAtB;AACA,iBAAKM,wBAAL,CAA8B2G,WAA9B;AACA,iBAAK7G,iBAAL,CAAuB6G,WAAvB;AACA,iBAAK1B,wBAAL,CAA8B0B,WAA9B;AACA,iBAAKb,0BAAL,CAAgCa,WAAhC;AACA,iBAAKV,0BAAL,CAAgCU,WAAhC;AACA,iBAAKuB,2BAAL,CAAiCvB,WAAjC;AACA,iBAAKE,0BAAL,CAAgCF,WAAhC;AACA,iBAAK5F,qBAAL,CAA2B4F,WAA3B;AACA,iBAAKzF,uBAAL,CAA6ByF,WAA7B;AACA,iBAAKnF,wBAAL,CAA8BmF,WAA9B;AACA,iBAAK9F,sBAAL,CAA4B8F,WAA5B;AACA,iBAAK5H,gBAAL,CAAsBsJ,UAAtB,GAdF,CAeE;AACA;AACA;AACH;;AACD,cAAI,KAAKtG,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAUiD,OAAV,CAAkB,IAAlB;AACA,iBAAKjD,IAAL,CAAU9F,KAAV,CAAgBuE,MAAhB,CAAuB,MAAvB;AACH;;AACD,cAAIH,QAAQ,CAACC,oBAAT,CAA8B,QAA9B,CAAJ,EAA6C;AACzC5L,mBAAO,CAACC,KAAR,CAAc,KAAKqK,QAAnB;AACAqB,oBAAQ,CAACC,oBAAT,CAA8B,QAA9B,EAAwCC,IAAxC,CAA6C,CAA7C,EAAgDC,MAAhD;AACH;AACJ;;;oDAE2B8H,S,EAAmBC,O,EAAiB;AAC5D,eAAKjG,KAAL,CAAWnC,MAAX,CAAkB;AACd1F,eAAG,EAAE8N,OADS;AAEdhG,kBAAM,EAAE,KAAKD,KAAL,CAAWE,oBAAX,CAAgC8F,SAAhC,EAA2C;AAAC/F,oBAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAT,aAA3C,CAFM;AAGdE,qBAAS,EAAE,EAHG;AAIdC,kBAAM,EAAE,CAAC;AAJK,WAAlB;AAMH;;;4DAEmCxN,c,EAAwBiR,a,EAAuB;AAC/E,cAAI,KAAKvG,YAAL,KAAsB1K,cAAc,CAACpD,QAAzC,EAAmD;AAC/C,gBAAIqU,aAAa,CAAChS,CAAd,GAAkBe,cAAc,CAACjG,SAArC,EAAgD;AAC5CkX,2BAAa,CAAC2B,QAAd,CAAuB,EAAvB;AACH;;AACD,gBAAI3B,aAAa,CAAChS,CAAd,GAAkBe,cAAc,CAACjG,SAArC,EAAgD;AAC5CkX,2BAAa,CAAC2B,QAAd,CAAuB,GAAvB;AACH;;AACD,gBAAI3B,aAAa,CAAC/R,CAAd,GAAkBc,cAAc,CAAC/F,SAArC,EAAgD;AAC5CgX,2BAAa,CAAC2B,QAAd,CAAuB,GAAvB;AACH;;AACD,gBAAI3B,aAAa,CAAC/R,CAAd,GAAkBc,cAAc,CAAC/F,SAArC,EAAgD;AAC5CgX,2BAAa,CAAC2B,QAAd,CAAuB,CAAvB;AACH;AACJ;AACJ;;;uCAEc;AACX,kBAAQ,KAAKzI,OAAL,CAAagC,GAAb,CAAiB,KAAKzB,YAAtB,EAAoC4G,KAA5C;AACI,iBAAK,EAAL;AAAS;AACL,uBAAO,mEAAUgC,OAAjB;AACH;;AACD,iBAAK,CAAC,GAAN;AAAW;AACP,uBAAO,mEAAUC,QAAjB;AACH;;AACD,iBAAK,CAAC,EAAN;AAAU;AACN,uBAAO,mEAAUD,OAAjB;AACH;;AACD,iBAAK,CAAL;AAAQ;AACJ,uBAAO,mEAAUC,QAAjB;AACH;AAZL;AAcH;;;4BAEkB;AACf,iBAAO,KAAKvF,gBAAZ;AACH;;;;MA3iBoC,8CAAOwF,K;;;uBAAnC5J,kB,EAAkB,yI,EAAA,wH,EAAA,wH,EAAA,8I,EAAA,kJ;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,kFAZhB,CACP;AACI6J,eAAO,EAAE,wEADb;AAEIC,gBAAQ,EAAE,sEAAYC;AAF1B,OADO,CAYgB,GAP1B,wEAO0B,C;AAP1B,c;AAAA,a;AAAA;AAAA;AChCL;;;;;;aDuCa/J,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFf;;;;;sEAEHA,kB,EAAkB;cAd9B,uDAc8B;eAdpB;AACP5L,kBAAQ,EAAE,gBADH;AAEPK,mBAAS,EAAE,CACP;AACIoV,mBAAO,EAAE,wEADb;AAEIC,oBAAQ,EAAE,sEAAYC;AAF1B,WADO,CAFJ;AAQP1V,qBAAW,EAAE,6BARN;AASPC,mBAAS,EAAE,CAAC,4BAAD;AATJ,S;AAcoB,S;cAH9B,wD;eAAW;AACRY,oBAAU,EAAE;AADJ,S;OAGmB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvC/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAM8U,WAAW,GAAG;AACvBC,gBAAU,EAAE,KADW;AAEvBF,4BAAsB,EAAE;AAFD,KAApB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYE,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIvU,OAAO,CAACC,KAAR,CAAcsU,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","'use strict';\r\n\r\nimport {IdentitySerializer, JsonSerializer} from 'rsocket-core';\r\n\r\n// Defined data which will be saved into response file (not modify)\r\nexport const CSV_RESPONSE_HEADERS = ['id', 'response_time_in_millis', 'request_timestamp', 'version_response', 'size'];\r\n\r\n//-----------------------   Global options for application which you can modify    -------------------------\r\n// 1) URLS\r\n// URL for measurement file (request file)\r\nexport const HTTP_URL_DOWNLOAD = 'http://localhost:8080/report/measurement';\r\n// export const HTTP_URL_DOWNLOAD = 'https://pacman-websocket.herokuapp.com/report/measurement';\r\n// domain for server (http2)\r\nexport const HTTP_URL_MAIN = 'https://localhost:8080';\r\n// export const HTTP_URL_MAIN = 'https://http2-pacman.herokuapp.com';\r\n// websocket(stomp) URL for connection\r\n// export const WEBSOCKET_URL_MAIN = 'ws://localhost:8080/socket';\r\nexport const WEBSOCKET_URL_MAIN = 'wss://websocket-pacman.azurewebsites.net/socket'\r\n// export const WEBSOCKET_URL_MAIN = 'wss://pacman-websocket.herokuapp.com/socket';\r\n// rsocket(websocket) URL for connection\r\nexport const RSOCKET_URL_MAIN =  'ws://localhost:8080/rsocket';\r\n// export const RSOCKET_URL_MAIN =  'wss://pacman-rsocket.herokuapp.com/rsocket';\r\n\r\n// 3) Serializer for RSocket\r\nexport const SERIALIZER_DATA = JsonSerializer\r\nexport const SERIALIZER_METADATA = IdentitySerializer\r\nexport const DATA_MIME_TYPE = 'application/json'\r\n","// source: proto/coin.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.CoinProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CoinProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CoinProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinProto.displayName = 'proto.CoinProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CoinProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.CoinProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CoinProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    positionX: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinProto;\n  return proto.CoinProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinProto}\n */\nproto.CoinProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CoinProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 position_x = 1;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_y = 2;\n * @return {number}\n */\nproto.CoinProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinProto} returns this\n */\nproto.CoinProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/monster.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.MonsterProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.MonsterProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.MonsterProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MonsterProto.displayName = 'proto.MonsterProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.MonsterProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.MonsterProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.MonsterProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    previousDirection: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MonsterProto;\n  return proto.MonsterProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MonsterProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MonsterProto}\n */\nproto.MonsterProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreviousDirection(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.MonsterProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.MonsterProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MonsterProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MonsterProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getPreviousDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.MonsterProto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.MonsterProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string previous_direction = 4;\n * @return {string}\n */\nproto.MonsterProto.prototype.getPreviousDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setPreviousDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 timestamp = 5;\n * @return {number}\n */\nproto.MonsterProto.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MonsterProto} returns this\n */\nproto.MonsterProto.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/player.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.PlayerProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PlayerProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PlayerProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PlayerProto.displayName = 'proto.PlayerProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PlayerProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.PlayerProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PlayerProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nickname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    score: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    stepDirection: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PlayerProto;\n  return proto.PlayerProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PlayerProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PlayerProto}\n */\nproto.PlayerProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNickname(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionX(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPositionY(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setScore(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStepDirection(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PlayerProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PlayerProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PlayerProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PlayerProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNickname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPositionX();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPositionY();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getStepDirection();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string nickname = 1;\n * @return {string}\n */\nproto.PlayerProto.prototype.getNickname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setNickname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 position_x = 2;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionX = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionX = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 position_y = 3;\n * @return {number}\n */\nproto.PlayerProto.prototype.getPositionY = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setPositionY = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 score = 4;\n * @return {number}\n */\nproto.PlayerProto.prototype.getScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional string step_direction = 5;\n * @return {string}\n */\nproto.PlayerProto.prototype.getStepDirection = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setStepDirection = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int32 version = 6;\n * @return {number}\n */\nproto.PlayerProto.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PlayerProto} returns this\n */\nproto.PlayerProto.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {MainSceneComponent} from \"./scenes/main-scene/main-scene.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'game', component: MainSceneComponent},\r\n  {path: '**', redirectTo: 'home'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { GameComponent } from './game/game.component';\r\nimport { MainSceneComponent } from './scenes/main-scene/main-scene.component';\r\nimport {WebsocketService} from './communication/websocket/websocket.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {OAuthModule} from \"angular-oauth2-oidc\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GameComponent,\r\n    MainSceneComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    OAuthModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  providers: [WebsocketService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MeasurementService {\r\n\r\n    private readonly measurements = new Array<MeasurementResponse>();\r\n\r\n    addMeasurementResponse(id, responseTimeInMillis, requestTimestamp, version, size) {\r\n        // if (this.measurements.length > 1999) {\r\n        //     this.measurements.splice(0, 1);\r\n        // }\r\n        this.measurements.push(new MeasurementResponse(id, responseTimeInMillis, requestTimestamp, version, size))\r\n    }\r\n\r\n    getResponseMeasurements(): Array<MeasurementResponse> {\r\n        return this.measurements;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementResponse} from \"../model/MeasurementResponse\";\r\nimport {Request} from \"../model/Request\";\r\nimport {Player} from \"../model/Player\";\r\nimport { Queue } from 'queue-typescript';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequestCacheService {\r\n\r\n    private requests: Queue<Request> = new Queue<Request>();\r\n    private _lastCorrectRequest: Request;\r\n    private static _nickname: string;\r\n\r\n    addRequest(id, x, y) {\r\n        // if (this.requests.length > 1999) {\r\n        //     this.requests.splice(0, 1);\r\n        // }\r\n        this.requests.enqueue(new Request(id, x, y));\r\n    }\r\n\r\n    getRequest(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                this.lastCorrectRequest = request;\r\n                return request;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getCorrectedPosition(id) {\r\n        if(this.requests.length > 0) {\r\n            const request = this.requests.front;\r\n            console.error(request);\r\n            if(request.id > id) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        while (this.requests.length > 0) {\r\n            const request = this.requests.dequeue();\r\n\r\n            if(request.id === id) {\r\n                return this.lastCorrectRequest;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get lastCorrectRequest(): Request {\r\n        return this._lastCorrectRequest;\r\n    }\r\n\r\n    set lastCorrectRequest(value: Request) {\r\n        this._lastCorrectRequest = value;\r\n    }\r\n\r\n    static set nickname(value: string) {\r\n        this._nickname = value;\r\n    }\r\n}\r\n","import {Direction} from \"./Direction\";\r\nimport {BehaviorSubject, Subject} from \"rxjs\";\r\nimport {SocketClientState} from \"./SocketClientState\";\r\nimport {Player} from \"../model/Player\";\r\nimport {Monster} from \"../model/Monster\";\r\nimport {Coin} from \"../model/Coin\";\r\n\r\nexport abstract class Communicator {\r\n    protected serverUrl;\r\n    protected state: BehaviorSubject<SocketClientState>;\r\n    private _myNickname;\r\n\r\n    protected playersToAdd = new Subject<Array<Player>>();\r\n    protected playerToRemove = new Subject<Player>();\r\n    protected playerToUpdate = new Subject<Player>();\r\n    protected monsterToUpdate = new Subject<Monster>();\r\n    protected ifJoinGame = new Subject<any>();\r\n\r\n    protected coinToGet = new Subject<Coin>();\r\n    protected updateScore = new Subject<number>();\r\n    protected refreshCoin = new Subject<Coin>();\r\n\r\n    protected constructor(serverUrl) {\r\n        this.serverUrl = serverUrl;\r\n    }\r\n\r\n    abstract initializeConnection();\r\n    abstract disconnect();\r\n    abstract sendPosition(data);\r\n    abstract joinToGame(nickname: string);\r\n    abstract addPlayer(nickname: string);\r\n\r\n\r\n    getState() {\r\n        return this.state.asObservable();\r\n    }\r\n\r\n    getPlayersToAdd() {\r\n        return this.playersToAdd.asObservable();\r\n    }\r\n\r\n    getPlayerToRemove() {\r\n        return this.playerToRemove.asObservable();\r\n    }\r\n\r\n    getPlayerToUpdate() {\r\n        return this.playerToUpdate.asObservable();\r\n    }\r\n\r\n    getMonsterToUpdate() {\r\n        return this.monsterToUpdate.asObservable();\r\n    }\r\n\r\n    getIfJoinGame() {\r\n        return this.ifJoinGame.asObservable();\r\n    }\r\n\r\n    getCoinToGet() {\r\n        return this.coinToGet.asObservable();\r\n    }\r\n\r\n    getRefreshCoins() {\r\n        return this.refreshCoin.asObservable();\r\n    }\r\n\r\n    get myNickname() {\r\n        return this._myNickname;\r\n    }\r\n\r\n    set myNickname(value) {\r\n        this._myNickname = value;\r\n    }\r\n\r\n    getUpdateScore() {\r\n        return this.updateScore.asObservable();\r\n    }\r\n}\r\n","export enum Direction {\r\n    HORIZON = \"HORIZON\",\r\n    VERTICAL = \"VERTICAL\",\r\n}\r\n","export enum SocketClientState {\r\n    CONNECTED,\r\n    ATTEMPTING,\r\n    ERROR\r\n}\r\n","import {IFormatter} from \"./IFormatter\";\r\n\r\nexport class JsonFormatter implements IFormatter {\r\n    decodeCoin(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return JSON.parse(data.body);\r\n    }\r\n\r\n    encode(data) {\r\n        return data;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return {'nickname': nickname}\r\n    }\r\n}\r\n\r\n","import {IFormatter} from \"./IFormatter\";\r\nimport {PlayerProto} from \"../../../../proto/generated/proto/player_pb\";\r\nimport {CoinProto} from \"../../../../proto/generated/proto/coin_pb\";\r\nimport {MonsterProto} from \"../../../../proto/generated/proto/monster_pb\";\r\n\r\nexport class ProtobufFormatter implements IFormatter{\r\n    decodeCoin(data) {\r\n        return CoinProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodeMonster(data) {\r\n        return MonsterProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    decodePlayer(data) {\r\n        return PlayerProto.deserializeBinary(data.binaryBody).toObject();\r\n    }\r\n\r\n    encode(data): PlayerProto {\r\n        const playerProto = new PlayerProto();\r\n        playerProto.setNickname(data.nickname);\r\n        playerProto.setPositionX(data.positionX);\r\n        playerProto.setPositionY(data.positionY);\r\n        playerProto.setScore(data.score);\r\n        playerProto.setStepDirection(data.stepDirection);\r\n        playerProto.setVersion(data.version);\r\n\r\n        return playerProto;\r\n    }\r\n\r\n    prepareNicknamePayload(nickname: string) {\r\n        return nickname;\r\n    }\r\n}\r\n","export class AdditionalObject {\r\n    private number: number;\r\n    private text: string;\r\n\r\n    constructor(number: number, text: string) {\r\n        this.number = number;\r\n        this.text = text;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {Communicator} from \"../Communicator\";\r\nimport {SocketClientState} from \"../SocketClientState\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\nimport {Client, Stomp} from '@stomp/stompjs';\r\nimport * as SockJS from 'sockjs-client';\r\n\r\nimport {PlayerProto} from \"../../../../proto/generated/proto/player_pb\";\r\nimport {Player} from \"../../model/Player\";\r\nimport {IFormatter} from \"../format/IFormatter\";\r\nimport {JsonFormatter} from \"../format/JsonFormatter\";\r\nimport {ProtobufFormatter} from \"../format/ProtobufFormatter\";\r\nimport {CustomBinaryFormatter} from \"../format/CustomBinaryFormatter\";\r\n// import {environment} from \"../../../environments/environment.websocket\";\r\nimport {environment} from '../../../environments/environment';\r\nimport {WEBSOCKET_URL_MAIN} from \"../../../../global-config\";\r\n\r\n@Injectable()\r\nexport class WebsocketService extends Communicator{\r\n    // 'https://backend-pacman-app.herokuapp.com/socket'\r\n    // 'http://localhost:8080/socket'\r\n    private stompClient: Client;\r\n    private formatter: IFormatter;\r\n\r\n    constructor(\r\n        private measurementService: MeasurementService,\r\n        private requestCache: RequestCacheService,\r\n    ) {\r\n        super(WEBSOCKET_URL_MAIN);\r\n        this.setFormatter(new JsonFormatter());\r\n    }\r\n\r\n    initializeConnection() {\r\n        // const ws = new SockJS(this.serverUrl);\r\n        // this.stompClient = Stomp.over(ws);\r\n        this.state = new BehaviorSubject<SocketClientState>(SocketClientState.ATTEMPTING);\r\n\r\n        this.stompClient = new Client({\r\n            brokerURL: this.serverUrl,\r\n            debug: function (str) {\r\n                console.log(str);\r\n            },\r\n            // maxWebSocketChunkSize: 5000,\r\n            splitLargeFrames: true,\r\n            reconnectDelay: 5000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000\r\n        });\r\n\r\n        this.stompClient.debug = () => {};\r\n\r\n        this.stompClient.onConnect = (frame) => {\r\n\r\n            console.error(frame)\r\n            this.stompClient.subscribe('/pacman/add/players', (gameToAddPlayer) => {\r\n                this.playersToAdd.next(JSON.parse(gameToAddPlayer.body));\r\n                console.error('Zaktualizowano gre, dodano gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/remove/player', (playerToRemove) => {\r\n                this.playerToRemove.next(this.formatter.decodePlayer(playerToRemove));\r\n                console.error('Zaktualizowano gre, usunieto gracza');\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/player', (playerToUpdate) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n\r\n                const responseTimeInMillis = new Date().getTime() - Number(playerToUpdate.headers.requestTimestamp);\r\n                // console.error(\"Odpowiedz serwera \" + responseTimeInMillis + \" milliseconds\")\r\n\r\n                this.measurementService.addMeasurementResponse(parsedPlayer.nickname, responseTimeInMillis,\r\n                    playerToUpdate.headers.requestTimestamp, parsedPlayer.version, playerToUpdate.headers.contentLength);\r\n\r\n                if (parsedPlayer.nickname === this.myNickname) {\r\n                    const request = this.requestCache.getRequest(parsedPlayer.version);\r\n                    this.updateScore.next(parsedPlayer.score);\r\n                    if (request !== null && (request.x !== parsedPlayer.positionX || request.y !== parsedPlayer.positionY)) {\r\n                        this.playerToUpdate.next(parsedPlayer);\r\n                    }\r\n                } else {\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/update/monster', (monster) => {\r\n                const monsterParsed = this.formatter.decodeMonster(monster);\r\n                this.measurementService.addMeasurementResponse(monsterParsed.id, 0,0,0,0);\r\n                this.monsterToUpdate.next(monsterParsed);\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/refresh/coins', () => {\r\n                this.refreshCoin.next();\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/get/coin', (coinPosition) => {\r\n                this.coinToGet.next(this.formatter.decodeCoin(coinPosition));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/reply', (currentCoinPosition) => {\r\n                this.ifJoinGame.next(JSON.parse(currentCoinPosition.body));\r\n            });\r\n\r\n            this.stompClient.subscribe('/user/queue/player', (playerToUpdate) => {\r\n                const parsedPlayer = this.formatter.decodePlayer(playerToUpdate);\r\n\r\n                const responseTimeInMillis = new Date().getTime() - Number(playerToUpdate.headers.requestTimestamp);\r\n\r\n                this.measurementService.addMeasurementResponse(parsedPlayer.nickname, responseTimeInMillis,\r\n                    playerToUpdate.headers.requestTimestamp, parsedPlayer.version, playerToUpdate.headers.contentLength);\r\n\r\n                const request = this.requestCache.getCorrectedPosition(parsedPlayer.version);\r\n\r\n                if (request !== null) {\r\n                    parsedPlayer.positionX = request.x;\r\n                    parsedPlayer.positionY = request.y;\r\n                    this.playerToUpdate.next(parsedPlayer);\r\n                }\r\n            });\r\n\r\n            this.stompClient.subscribe('/pacman/collision/update', (allCoinPosition) => {\r\n            });\r\n\r\n            this.state.next(SocketClientState.CONNECTED);\r\n        };\r\n\r\n        this.stompClient.onStompError = (frame) => {\r\n            console.log('Broker reported error: ' + frame.headers['message']);\r\n            console.log('Additional details: ' + frame.body);\r\n        };\r\n\r\n        this.stompClient.activate();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    disconnect() {\r\n        console.error('Disconnected');\r\n        this.stompClient.deactivate();\r\n    }\r\n\r\n    sendPosition(dataToSend) {\r\n        const dataWithSpecificFormat = this.formatter.encode(dataToSend);\r\n        if (this.formatter instanceof JsonFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position',\r\n                body: JSON.stringify(\r\n                    dataWithSpecificFormat\r\n                ),\r\n                headers: {\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else if (this.formatter instanceof ProtobufFormatter) {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/protobuf',\r\n                binaryBody: dataWithSpecificFormat.serializeBinary(),\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        } else {\r\n            this.stompClient.publish({\r\n                destination: '/app/send/position/custom/binary',\r\n                binaryBody: dataWithSpecificFormat,\r\n                headers: {\r\n                    /*'content-type': 'application/octet-stream',*/\r\n                    requestTimestamp: new Date().getTime().toString()\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    joinToGame(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/join/game',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    addPlayer(nickname: string) {\r\n        this.stompClient.publish({\r\n            destination: '/app/add/player',\r\n            body: JSON.stringify({\r\n                \"nickname\": nickname\r\n            })\r\n        });\r\n    }\r\n\r\n    variable = this.makeid(30000);\r\n\r\n    makeid(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setFormatter(formatter) {\r\n        this.formatter = formatter;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MeasurementService} from \"../cache/measurement.service\";\r\nimport {saveAs} from 'file-saver';\r\nimport {CSV_RESPONSE_HEADERS} from \"../../../global-config\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n    private RESPONSE_FILE = \"response_measurement.csv\";\r\n\r\n    constructor(private cacheMeasurement: MeasurementService) {\r\n    }\r\n\r\n    downloadResponseMeasurements() {\r\n        this.downloadResponseFile(this.cacheMeasurement.getResponseMeasurements());\r\n    }\r\n\r\n    private downloadResponseFile(data: any) {\r\n        const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\r\n        let header = CSV_RESPONSE_HEADERS;\r\n        let csv = data.map(row => header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\r\n        header = header.map(function(x){ return x.toUpperCase() })\r\n        csv.unshift(header.join(','));\r\n        let csvArray = csv.join('\\r\\n');\r\n\r\n        saveAs(new Blob([csvArray], {type: 'text/csv'}), this.RESPONSE_FILE);\r\n    }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {MainSceneComponent} from '../scenes/main-scene/main-scene.component';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css'],\r\n})\r\nexport class GameComponent implements OnInit {\r\n  phaserGame: Phaser.Game;\r\n  config: Phaser.Types.Core.GameConfig;\r\n\r\n  constructor(private mainScene: MainSceneComponent) {\r\n    this.config = {\r\n      type: Phaser.AUTO,\r\n      height: 1024,\r\n      width: 1600,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_HORIZONTALLY\r\n      },\r\n      scene: [],\r\n      parent: 'gameContainer',\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: {y: 0}\r\n        }\r\n      },\r\n      fps: {\r\n        target: 50,\r\n        forceSetTimeOut: true\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      console.error('Initialize Game Object');\r\n\r\n      this.phaserGame = new Phaser.Game(this.config);\r\n      this.phaserGame.scene.add('main', this.mainScene);\r\n      this.phaserGame.scene.start('main');\r\n\r\n      console.error('Completed Initialization Game Object');\r\n    }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n  public nickname: string;\r\n  public answer: string;\r\n\r\n  constructor(private router: Router) {\r\n    if(this.router.getCurrentNavigation().extras.state) {\r\n      this.answer = this.router.getCurrentNavigation().extras.state.nick;\r\n    }\r\n  }\r\n\r\n  startGame(nickname: string) {\r\n    this.router.navigate(['game'], {state: {nick: nickname}});\r\n  }\r\n\r\n}\r\n","<div id=\"background\">\r\n    <h1>Welcome in multiplayer Pacman Game</h1>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <h2>Set nickname and click 'START'</h2>\r\n    <input [(ngModel)]=\"nickname\">\r\n    <button (click)=\"startGame(nickname)\" [disabled]=\"!nickname || nickname=='NO_ONE' || (nickname.length>10 || nickname.length<2)\">Start</button>\r\n\r\n    <br><br><br><br>\r\n    <h4 *ngIf=\"answer\">You can't start game because other player has the same nickname: {{answer}}</h4>\r\n\r\n<!--    <div id=\"description\">-->\r\n<!--        <h3>Description</h3>-->\r\n<!--    </div>-->\r\n\r\n</div>\r\n","export class MeasurementResponse {\r\n    private _id: string;\r\n    private _response_time_in_millis: number;\r\n    private _request_timestamp: number;\r\n    private _version_response: number;\r\n    private _size: number;\r\n\r\n    constructor(id: string, response_time_in_millis: number, request_timestamp: number, version_response: number, size: number) {\r\n        this._id = id;\r\n        this._response_time_in_millis = response_time_in_millis;\r\n        this._request_timestamp = request_timestamp;\r\n        this._version_response = version_response;\r\n        this._size = size;\r\n    }\r\n\r\n    get response_time_in_millis(): number {\r\n        return this._response_time_in_millis;\r\n    }\r\n\r\n    set response_time_in_millis(value: number) {\r\n        this._response_time_in_millis = value;\r\n    }\r\n\r\n    get request_timestamp(): number {\r\n        return this._request_timestamp;\r\n    }\r\n\r\n    set request_timestamp(value: number) {\r\n        this._request_timestamp = value;\r\n    }\r\n\r\n    get version_response(): number {\r\n        return this._version_response;\r\n    }\r\n\r\n    set version_response(value: number) {\r\n        this._version_response = value;\r\n    }\r\n\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    set size(value: number) {\r\n        this._size = value;\r\n    }\r\n}\r\n","import Phaser from \"phaser\";\r\nimport {MainSceneComponent} from \"../scenes/main-scene/main-scene.component\";\r\n\r\nexport class Player extends Phaser.Physics.Arcade.Sprite {\r\n    public nickname: string;\r\n    private _positionX: number;\r\n    private _positionY: number;\r\n    private _score: number;\r\n    private _version: number;\r\n    public static SPEED = 200;\r\n\r\n    constructor(scene: MainSceneComponent, x: number, y: number, texture: string, score: number) {\r\n        super(scene, x, y, texture);\r\n\r\n        // Dodanie gracza do sceny (zeby w ogole byl widoczny)\r\n        scene.add.existing(this);\r\n\r\n        // Dodanie gracza do fizyki co pozwala na ustawianie interakcji\r\n        scene.physics.add.existing(this);\r\n\r\n        // Dodanie kolidera na graczu oraz warstwie\r\n        scene.physics.add.collider(this, scene.backgroundLayer);\r\n\r\n        // scene.anims.play('myUp');\r\n\r\n        this._score = score;\r\n    }\r\n\r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    set score(value: number) {\r\n        this._score = value;\r\n    }\r\n\r\n    get positionX(): number {\r\n        return this._positionX;\r\n    }\r\n\r\n    set positionX(value: number) {\r\n        this._positionX = value;\r\n    }\r\n\r\n    get positionY(): number {\r\n        return this._positionY;\r\n    }\r\n\r\n    set positionY(value: number) {\r\n        this._positionY = value;\r\n    }\r\n\r\n    get version(): number {\r\n        return this._version;\r\n    }\r\n\r\n    set version(value: number) {\r\n        this._version = value;\r\n    }\r\n}\r\n","export class Request {\r\n    private _id: number;\r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    constructor(id: number, x: number, y: number) {\r\n        this._id = id;\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n    }\r\n}\r\n","import {Component, ElementRef, Injectable, Renderer2, ViewChild} from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport {WebsocketService} from '../../communication/websocket/websocket.service';\r\nimport {Router} from \"@angular/router\";\r\nimport {Player} from \"../../model/Player\";\r\nimport {interval, Observable, Subscription} from \"rxjs\";\r\nimport StaticGroup = Phaser.Physics.Arcade.StaticGroup;\r\nimport {DownloadService} from \"../../downloader/download.service\";\r\nimport Group = Phaser.Physics.Arcade.Group;\r\nimport {Communicator} from \"../../communication/Communicator\";\r\nimport {Direction} from \"../../communication/Direction\";\r\nimport {SocketClientState} from \"../../communication/SocketClientState\";\r\nimport {Http2Service} from \"../../communication/http2/http2.service\";\r\nimport {MeasurementService} from \"../../cache/measurement.service\";\r\nimport {RequestCacheService} from \"../../cache/request-cache.service\";\r\nimport {Request} from \"../../model/Request\";\r\nimport {RsocketService} from \"../../communication/rsocket/rsocket.service\";\r\nimport {RSocketSimulationConnection} from \"../../communication/simulation/rsocket/RSocketSimulationConnection\";\r\n\r\n// @ts-ignore\r\nimport *  as  data from '../../../../rsocketData.json';\r\nimport {WebsocketSimulationConnection} from \"../../communication/simulation/websocket/WebsocketSimulationConnection\";\r\nimport {AdditionalObject} from \"../../communication/simulation/data/AdditionalObject\";\r\nimport {environment} from \"../../../environments/environment\";\r\n\r\n@Component({\r\n    selector: 'app-main-scene',\r\n    providers: [\r\n        {\r\n            provide: Communicator,\r\n            useClass: environment.serviceToCommunication\r\n        }\r\n    ],\r\n    templateUrl: './main-scene.component.html',\r\n    styleUrls: ['./main-scene.component.css']\r\n})\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MainSceneComponent  extends Phaser.Scene{\r\n    // Additional data for testing changing data size\r\n    private additionalData = this.randomString(50, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r\n    private arrayWithAdditionalData: Array<AdditionalObject> = new Array<AdditionalObject>(20);\r\n    // Objects for simulation players\r\n    // private simulationConnection = new Array(10);\r\n\r\n    // Phaser 3 objects\r\n    private board: Phaser.Tilemaps.Tilemap;\r\n\r\n    private pathLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private _backgroundLayer: Phaser.Tilemaps.DynamicTilemapLayer;\r\n    private coinLayer: Phaser.Types.Tilemaps.TiledObject[];\r\n\r\n    private pacmanObjects: Phaser.Tilemaps.Tileset;\r\n    private coin: Phaser.Tilemaps.Tileset;\r\n\r\n    private exitButton: Phaser.GameObjects.Image;\r\n    private downloadButton: Phaser.GameObjects.Image;\r\n    private cursorKeys: Phaser.Types.Input.Keyboard.CursorKeys;\r\n\r\n    private coins: Group;\r\n\r\n    // Subscriptions\r\n    ifJoinToGameSubscription?: Subscription;\r\n    stateSubscription?: Subscription;\r\n    playersToAddSubscription?: Subscription;\r\n    playerToRemoveSubscription?: Subscription;\r\n    playerToUpdateSubscription?: Subscription;\r\n    monsterToUpdateSubscription?: Subscription;\r\n    positionSenderSubscription?: Subscription;\r\n    coinToGetSubscription?: Subscription;\r\n    updateScoreSubscription?: Subscription;\r\n    refreshCoinsSubscription?: Subscription;\r\n    subscriptionUpdateTop3?: Subscription;\r\n\r\n    // Game objects\r\n    private players: Map<string, any> = new Map<string, Player>();\r\n    private monsters: Map<number, Phaser.GameObjects.Sprite> = new Map<number, Phaser.GameObjects.Sprite>();\r\n    private rank = new Array<Player>();\r\n    private myPlayerName: string;\r\n\r\n    // Sending objects\r\n    private startSendingPlayerPosition = false;\r\n\r\n    private positionSender: Observable<number>;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    private lastAngle: number;\r\n    private counterRequest: number = 0;\r\n\r\n    // Score table objects\r\n    private yourScore: any;\r\n    private scoreRanking: Map<string, any> = new Map<string, any>();\r\n    private scoreNumber1: any;\r\n    private scoreNumber2: any;\r\n    private scoreNumber3: any;\r\n\r\n    constructor(\r\n        private websocketService: Communicator,\r\n        private router: Router,\r\n        private renderer: Renderer2,\r\n        private downloadService: DownloadService,\r\n        private requestCache: RequestCacheService\r\n    ) {\r\n        super({key: 'main'});\r\n\r\n        if (this.router.getCurrentNavigation().extras.state) {\r\n            this.myPlayerName = this.router.getCurrentNavigation().extras.state.nick;\r\n            this.websocketService.myNickname = this.myPlayerName;\r\n        } else {\r\n            this.router.navigate(['home']);\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.websocketService.initializeConnection();\r\n        // const tab = (data as any).default;\r\n        //\r\n        for (let i = 0; i < this.arrayWithAdditionalData.length; i++) {\r\n            this.arrayWithAdditionalData[i] = new AdditionalObject(5555, this.additionalData);\r\n        }\r\n        // setTimeout(() => {\r\n        //         for (let i = 0; i < tab.length; i++) {\r\n        //             this.simulationConnection[i] = new WebsocketSimulationConnection(tab[i].nickname);\r\n        //             this.simulationConnection[i].initializeConnection(tab[i],4000 + 500 * i);\r\n        //         }\r\n        //     }, 5000\r\n        // )\r\n\r\n        this.stateSubscription = this.websocketService.getState().subscribe(state => {\r\n            if (state === SocketClientState.CONNECTED) {\r\n                this.ifJoinToGameSubscription = this.websocketService.getIfJoinGame().subscribe((currentCoinPosition) => {\r\n                    if (currentCoinPosition.length > 0) {\r\n                        for (const coinPosition of currentCoinPosition) {\r\n                            this.coins.create((coinPosition.positionX * 32) + 16, (coinPosition.positionY * 32) - 16, \"coin\", null, true, true);\r\n                        }\r\n                        this.websocketService.addPlayer(this.myPlayerName);\r\n                    } else if (currentCoinPosition.length === 0) {\r\n                        document.getElementsByTagName('canvas').item(0).remove();\r\n                        this.router.navigate(['home'], {state: {nick: this.myPlayerName}});\r\n                        console.error('Juz taki nick istnieje nie mozna dolaczyc!');\r\n                    }\r\n                })\r\n                this.websocketService.joinToGame(this.myPlayerName);\r\n                console.error('Nawiazalem polaczenie websocket i dodalem uzytkownika!');\r\n            } else if (state === SocketClientState.ERROR) {\r\n                console.error('Brak polaczenia websocket z serwerem');\r\n                this.cleanAndBackToHomePage();\r\n            } else {\r\n                console.error('Probuje nawiazac polaczenie!')\r\n            }\r\n        })\r\n    }\r\n\r\n    create() {\r\n        this.startGame();\r\n\r\n        const updateTop3 = interval(1000);\r\n        this.subscriptionUpdateTop3 = updateTop3.subscribe(() => {\r\n            this.checkRanking();\r\n        });\r\n\r\n        // Jeszcze trzeba zaimplementowac\r\n        this.coinToGetSubscription = this.websocketService.getCoinToGet().subscribe((coinToCollect) => {\r\n        });\r\n\r\n        this.updateScoreSubscription = this.websocketService.getUpdateScore().subscribe((myScore) => {\r\n            this.players.get(this.myPlayerName).score = myScore;\r\n            this.yourScore.setText(this.myPlayerName + \" score: \" + myScore);\r\n        });\r\n\r\n        // Jeszcze trzeba zaimplementowac\r\n        this.refreshCoinsSubscription = this.websocketService.getRefreshCoins().subscribe(() => {\r\n            this.coinLayer.forEach(object => {\r\n                let obj = this.coins.create(object.x + 16, object.y - 16, \"coin\");\r\n                obj.setScale(object.width / 32, object.height / 32);\r\n                obj.body.width = object.width;\r\n                obj.body.height = object.height;\r\n            });\r\n        });\r\n\r\n        this.managePlayersInGame();\r\n        this.manageMonstersInGame();\r\n\r\n        console.error('Create Board');\r\n        this.game.loop.targetFps = 50\r\n        this.physics.world.setFPS(50)\r\n        console.error('---------------- Wyswietlam informacje o grze ---------------');\r\n        console.error('FPS actual: ' + this.game.loop.actualFps);\r\n        console.error('FPS physics.world ' + this.physics.world.fps);\r\n        console.error('---------------------------------------------');\r\n\r\n        this.createAnimationsBySpriteKey('my-player', 'myAnim');\r\n        this.createAnimationsBySpriteKey('other-player', 'enemyAnim');\r\n        this.anims.create({\r\n            key: 'animation',\r\n            frames: this.anims.generateFrameNumbers('monster', {frames: [0, 7]}),\r\n            frameRate: 2,\r\n            repeat: -1\r\n        });\r\n\r\n        this.board = this.add.tilemap('board');\r\n\r\n        this.pacmanObjects = this.board.addTilesetImage('pacman-elements');\r\n        this.coin = this.board.addTilesetImage('coin');\r\n\r\n        this.pathLayer = this.board.createDynamicLayer('path', [this.pacmanObjects], 0, 0);\r\n        this._backgroundLayer = this.board.createDynamicLayer('background_main', [this.pacmanObjects], 0, 0);\r\n        this.coinLayer = this.board.getObjectLayer('objectLayer')['objects'];\r\n\r\n        this.exitButton = this.add.image(this.game.canvas.width - 48, 48, 'exit-button');\r\n        this.exitButton.setInteractive();\r\n        this.exitButton.on('pointerup', () => {\r\n            this.switchScene();\r\n        });\r\n\r\n        this.downloadButton = this.add.image(this.game.canvas.width - 208, 48, 'download-button');\r\n        this.downloadButton.setInteractive();\r\n        this.downloadButton.on('pointerup', () => {\r\n            // this.downloadService.downloadRequestMeasurements();\r\n            this.downloadService.downloadResponseMeasurements();\r\n        });\r\n\r\n        // Dodanie kolizji dla elementow warstwy background o id od 150 do 250 (te id znajduja sie w tileset ktory sklada sie na te warstwe)\r\n        this._backgroundLayer.setCollisionBetween(140, 250);\r\n\r\n        this.cursorKeys = this.input.keyboard.createCursorKeys();\r\n\r\n        this.coins = this.physics.add.group();\r\n\r\n        this.scoreNumber1 = this.add.text(700, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber2 = this.add.text(1100, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n        this.scoreNumber3 = this.add.text(400, 32, '-', {\r\n            font: \"30px Arial\",\r\n            fill: \"#0022ff\",\r\n            align: \"center\"\r\n        });\r\n\r\n        this.coins.removeCallback = function () {\r\n        }\r\n\r\n\r\n        console.error('Completed Board');\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('pacman-elements', 'assets/main/images/pacmanObjects.png');\r\n        this.load.image('coin', 'assets/main/images/coin.png');\r\n\r\n        this.load.image('exit-button', 'assets/main/images/exit-button.png');\r\n        this.load.image('download-button', 'assets/main/images/download-button.png');\r\n\r\n        this.load.spritesheet('my-player', 'assets/main/images/my-player.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('other-player', 'assets/main/images/enemie.png', {frameWidth: 32, frameHeight: 32});\r\n        this.load.spritesheet('monster', 'assets/main/images/monster.png', {frameWidth: 32, frameHeight: 32});\r\n\r\n        this.load.tilemapTiledJSON('board', 'assets/main/map/board.json');\r\n    }\r\n\r\n    update() {\r\n        // console.log('PETLA GRA');\r\n        if (this.startSendingPlayerPosition) {\r\n            this.movePlayerManager();\r\n        }\r\n    }\r\n\r\n    collectCoin(player: Player, coin) {\r\n        coin.destroy(coin.x, coin.y);\r\n        return false;\r\n    }\r\n\r\n    managePlayersInGame() {\r\n        this.playersToAddSubscription = this.websocketService.getPlayersToAdd().subscribe((playersToAdd: Array<Player>) => {\r\n            playersToAdd.sort((a, b) => {\r\n                return b.score - a.score\r\n            });\r\n\r\n            this.rank.length = 4;\r\n            this.scoreNumber1.setText(\"NO_ONE\");\r\n            this.scoreNumber2.setText(\"NO_ONE\");\r\n            this.scoreNumber3.setText(\"NO_ONE\");\r\n            let counter = 0;\r\n            for (const player of playersToAdd) {\r\n                counter++;\r\n                if (counter < 4) {\r\n                    this.rank[counter - 1] = player\r\n                    this.setScoreText(counter, player);\r\n                }\r\n\r\n                if (!this.players.has(player.nickname)) {\r\n                    if (player.nickname !== this.myPlayerName) {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'other-player', player.score));\r\n                        console.error('Dodaje gracza ' + player.nickname)\r\n                        this.players.get(player.nickname).anims.play('enemyAnim');\r\n                    } else {\r\n                        this.players.set(player.nickname, new Player(this, player.positionX, player.positionY, 'my-player', player.score));\r\n                        this.startSendingPlayerPosition = true;\r\n                        this.yourScore = this.add.text(32, 32, this.myPlayerName + \" score: \" + player.score, {\r\n                            font: \"30px Arial\",\r\n                            fill: \"#ff0044\",\r\n                            align: \"center\"\r\n                        });\r\n\r\n                        // Uruchomienie animacji wczesniej przygotowanej\r\n                        this.players.get(player.nickname).anims.play('myAnim');\r\n                        this.requestCache.lastCorrectRequest = new Request(0, player.positionX, player.positionY);\r\n                        this.sendPlayerPosition();\r\n                    }\r\n                    this.physics.add.overlap(this.players.get(player.nickname), this.coins, this.collectCoin, null, this);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.playerToRemoveSubscription = this.websocketService.getPlayerToRemove().subscribe((playerToRemove: Player) => {\r\n            this.rank = this.rank.filter(item => item.nickname !== playerToRemove.nickname);\r\n            console.error(\"Po srpawdzeniu rankingu\")\r\n            if (playerToRemove.nickname === this.myPlayerName) {\r\n                this.cleanAndBackToHomePage();\r\n            }\r\n            this.players.get(playerToRemove.nickname).destroy(true);\r\n            this.players.delete(playerToRemove.nickname);\r\n        });\r\n\r\n        this.playerToUpdateSubscription = this.websocketService.getPlayerToUpdate().subscribe((player) => {\r\n            let currentPlayer: Player = this.players.get(player.nickname);\r\n\r\n            if (currentPlayer) {\r\n                this.changeAnimationFrameForOtherPlayers(player, currentPlayer);\r\n\r\n                currentPlayer.x = player.positionX;\r\n                currentPlayer.y = player.positionY;\r\n                currentPlayer.score = player.score;\r\n                console.error('current player')\r\n            }\r\n        })\r\n    }\r\n\r\n    // 50 FPS dla 20 milis\r\n    sendPlayerPosition() {\r\n        const player = this.players.get(this.myPlayerName);\r\n        // this.lastAngle = player.angle;\r\n        //\r\n        // this.setDeceleratingTimeout(()=> {\r\n        //     const player: Player = this.players.get(this.myPlayerName);\r\n        //     this.requestCache.addRequest(++this.counterRequest, player.x, player.y);\r\n        //     if(this.arrayWithAdditionalData.length < 2000) {\r\n        //         this.arrayWithAdditionalData.push(new AdditionalObject(5555,this.additionalData));\r\n        //     }\r\n        //\r\n        //     this.websocketService.sendPosition({\r\n        //         \"nickname\": this.myPlayerName,\r\n        //         \"positionX\": player.x,\r\n        //         \"positionY\": player.y,\r\n        //         \"score\": player.score,\r\n        //         \"stepDirection\": this.getDirection(),\r\n        //         \"version\": this.counterRequest,\r\n        //         \"requestTimestamp\": new Date().getTime(),\r\n        //         // \"additionalData\": this.arrayWithAdditionalData\r\n        //     });\r\n        //\r\n        //     }, 1, 10000);\r\n        this.lastX = player.x;\r\n        this.lastY = player.y;\r\n        this.lastAngle = player.angle;\r\n\r\n        const dataProvider = interval(1000);\r\n        const subscriptionDataProvider = dataProvider.subscribe(()=> {\r\n            for(let i =0;i<10;i++) {\r\n                this.arrayWithAdditionalData.push(new AdditionalObject(5555,this.additionalData));\r\n            }\r\n            if(this.arrayWithAdditionalData.length > 300) {\r\n                subscriptionDataProvider.unsubscribe();\r\n            }\r\n        });\r\n\r\n        this.positionSender = interval(20);\r\n        this.positionSenderSubscription = this.positionSender.subscribe(() => {\r\n            const player: Player = this.players.get(this.myPlayerName);\r\n            if ((this.lastX !== player.x) ||\r\n                (this.lastY !== player.y) ||\r\n                (this.lastAngle !== player.angle)) {\r\n\r\n                this.lastX = player.x;\r\n                this.lastY = player.y;\r\n                this.lastAngle = player.angle;\r\n\r\n                this.requestCache.addRequest(++this.counterRequest, player.x, player.y);\r\n\r\n                this.websocketService.sendPosition({\r\n                    \"nickname\": this.myPlayerName,\r\n                    \"positionX\": player.x,\r\n                    \"positionY\": player.y,\r\n                    \"score\": player.score,\r\n                    \"stepDirection\": this.getDirection(),\r\n                    \"version\": this.counterRequest,\r\n                    \"requestTimestamp\": new Date().getTime(),\r\n                    \"additionalData\": this.arrayWithAdditionalData\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setDeceleratingTimeout(callback, factor, times) {\r\n        var internalCallback = function (tick, counter) {\r\n            return function () {\r\n                if (--tick >= 0) {\r\n                    window.setTimeout(internalCallback, (20000 - (++counter * factor)) / 1000);\r\n                    callback();\r\n                }\r\n            }\r\n        }(times, 0);\r\n\r\n        window.setTimeout(internalCallback, factor);\r\n    };\r\n\r\n    randomString(length, chars) {\r\n        let result = '';\r\n        for (let i = length; i > 0; --i) {\r\n            result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setScoreText(number, player) {\r\n        switch (number) {\r\n            case 1: {\r\n                this.scoreNumber1.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber1);\r\n                this.scoreNumber2.setText(\"-\");\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.scoreNumber2.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber2);\r\n                this.scoreNumber3.setText(\"-\");\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.scoreNumber3.setText(player.nickname + \" score: \" + player.score);\r\n                this.scoreRanking.set(player.nickname, this.scoreNumber3);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkRanking() {\r\n        let playersArray = new Array<Player>();\r\n        this.players.forEach((value: Player, key: string) => {\r\n            value.nickname = key;\r\n            playersArray.push(value);\r\n        });\r\n\r\n        playersArray = playersArray.sort((a, b) => b.score - a.score);\r\n\r\n        let counter = 1\r\n        playersArray.forEach(element => {\r\n            this.setScoreText(counter, element);\r\n            counter++;\r\n            if (counter > 3) {\r\n                return;\r\n            }\r\n        })\r\n    }\r\n\r\n    movePlayerManager() {\r\n        if (this.cursorKeys.left.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(-Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(270);\r\n        } else if (this.cursorKeys.right.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(Player.SPEED, 0);\r\n            this.players.get(this.myPlayerName).setAngle(90);\r\n        } else if (this.cursorKeys.up.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, -Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(0);\r\n        } else if (this.cursorKeys.down.isDown === true) {\r\n            this.players.get(this.myPlayerName).setVelocity(0, Player.SPEED);\r\n            this.players.get(this.myPlayerName).setAngle(180);\r\n        }\r\n    }\r\n\r\n    manageMonstersInGame() {\r\n        this.monsterToUpdateSubscription = this.websocketService.getMonsterToUpdate().subscribe((monsterToUpdate) => {\r\n            if (this.monsters.has(monsterToUpdate.id)) {\r\n                this.monsters.get(monsterToUpdate.id).x = monsterToUpdate.positionX;\r\n                this.monsters.get(monsterToUpdate.id).y = monsterToUpdate.positionY;\r\n            } else {\r\n                this.monsters.set(monsterToUpdate.id, this.physics.add.sprite(monsterToUpdate.positionX, monsterToUpdate.positionY, 'monster'));\r\n                this.monsters.get(monsterToUpdate.id).anims.play('animation')\r\n            }\r\n        })\r\n    }\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    switchScene() {\r\n        this.cleanAndBackToHomePage();\r\n    }\r\n\r\n    cleanAndBackToHomePage() {\r\n        this.startSendingPlayerPosition = false;\r\n        this.myPlayerName = '';\r\n        this.router.navigate(['home']);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.ifJoinToGameSubscription && this.stateSubscription &&\r\n            this.playersToAddSubscription && this.playerToRemoveSubscription &&\r\n            this.playerToUpdateSubscription && this.monsterToUpdateSubscription &&\r\n            this.positionSenderSubscription && this.coinToGetSubscription &&\r\n            this.updateScoreSubscription && this.refreshCoinsSubscription &&\r\n            this.subscriptionUpdateTop3\r\n        ) {\r\n            console.error('OnDestory')\r\n            this.counterRequest = 0;\r\n            this.ifJoinToGameSubscription.unsubscribe();\r\n            this.stateSubscription.unsubscribe();\r\n            this.playersToAddSubscription.unsubscribe();\r\n            this.playerToRemoveSubscription.unsubscribe();\r\n            this.playerToUpdateSubscription.unsubscribe();\r\n            this.monsterToUpdateSubscription.unsubscribe();\r\n            this.positionSenderSubscription.unsubscribe();\r\n            this.coinToGetSubscription.unsubscribe();\r\n            this.updateScoreSubscription.unsubscribe();\r\n            this.refreshCoinsSubscription.unsubscribe();\r\n            this.subscriptionUpdateTop3.unsubscribe();\r\n            this.websocketService.disconnect();\r\n            // for (let i = 0; i < this.simulationConnection.length; i++) {\r\n            //     this.simulationConnection[i].disconnect();\r\n            // }\r\n        }\r\n        if (this.game) {\r\n            this.game.destroy(true);\r\n            this.game.scene.remove('main');\r\n        }\r\n        if (document.getElementsByTagName('canvas')) {\r\n            console.error(this.renderer);\r\n            document.getElementsByTagName('canvas').item(0).remove();\r\n        }\r\n    }\r\n\r\n    createAnimationsBySpriteKey(figureKey: string, animKey: string) {\r\n        this.anims.create({\r\n            key: animKey,\r\n            frames: this.anims.generateFrameNumbers(figureKey, {frames: [3, 1]}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n    }\r\n\r\n    changeAnimationFrameForOtherPlayers(playerToUpdate: Player, currentPlayer: Player) {\r\n        if (this.myPlayerName !== playerToUpdate.nickname) {\r\n            if (currentPlayer.x < playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(90);\r\n            }\r\n            if (currentPlayer.x > playerToUpdate.positionX) {\r\n                currentPlayer.setAngle(270);\r\n            }\r\n            if (currentPlayer.y < playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(180);\r\n            }\r\n            if (currentPlayer.y > playerToUpdate.positionY) {\r\n                currentPlayer.setAngle(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDirection() {\r\n        switch (this.players.get(this.myPlayerName).angle) {\r\n            case 90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case -180: {\r\n                return Direction.VERTICAL;\r\n            }\r\n            case -90: {\r\n                return Direction.HORIZON;\r\n            }\r\n            case 0: {\r\n                return Direction.VERTICAL;\r\n            }\r\n        }\r\n    }\r\n\r\n    get backgroundLayer(): Phaser.Tilemaps.DynamicTilemapLayer {\r\n        return this._backgroundLayer;\r\n    }\r\n}\r\n","<app-game></app-game>\r\n","import {WebsocketService} from \"../app/communication/websocket/websocket.service\";\r\n\r\nexport const environment = {\r\n    production: false,\r\n    serviceToCommunication: WebsocketService\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}